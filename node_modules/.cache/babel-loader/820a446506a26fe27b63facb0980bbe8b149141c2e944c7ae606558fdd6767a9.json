{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Restaurant Sales Dashboard\")], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"filters\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"dateFilter\"\n}, \"Select Date:\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"summary\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Sales Summary\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Sales by Staff:\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"charts\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"hourly-chart\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Hourly Performance\"), /*#__PURE__*/_createCommentVNode(\" Add your hourly performance chart here \")]), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"monthly-chart\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Monthly Performance\"), /*#__PURE__*/_createCommentVNode(\" Add your monthly performance chart here \")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"main\", null, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"dateFilter\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedDate = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.filterSales && $options.filterSales(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.selectedDate]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"p\", null, \"Total Sales: \" + _toDisplayString($options.formatCurrency($options.totalSales)), 1 /* TEXT */), _hoisted_7, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.salesByStaff, (sales, staff) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: staff\n    }, _toDisplayString(staff) + \": \" + _toDisplayString($options.formatCurrency(sales)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"p\", null, \"Top Selling Item: \" + _toDisplayString($options.topSellingItem), 1 /* TEXT */)]), _hoisted_8])]);\n}","map":{"version":3,"names":["id","_createElementVNode","class","for","_createCommentVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","type","$data","selectedDate","$event","onChange","_cache","args","$options","filterSales","_hoisted_5","_hoisted_6","_toDisplayString","formatCurrency","totalSales","_hoisted_7","_Fragment","_renderList","salesByStaff","sales","staff","key","topSellingItem","_hoisted_8"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frosty\\src\\components\\Admin\\AdminDashboard.vue"],"sourcesContent":["<template>\r\n    <div id=\"app\">\r\n      <header>\r\n        <h1>Restaurant Sales Dashboard</h1>\r\n      </header>\r\n      <main>\r\n        <div class=\"filters\">\r\n          <label for=\"dateFilter\">Select Date:</label>\r\n          <input type=\"date\" id=\"dateFilter\" v-model=\"selectedDate\" @change=\"filterSales\" />\r\n        </div>\r\n  \r\n        <div class=\"summary\">\r\n          <h2>Sales Summary</h2>\r\n          <p>Total Sales: {{ formatCurrency(totalSales) }}</p>\r\n          <p>Sales by Staff:</p>\r\n          <ul>\r\n            <li v-for=\"(sales, staff) in salesByStaff\" :key=\"staff\">\r\n              {{ staff }}: {{ formatCurrency(sales) }}\r\n            </li>\r\n          </ul>\r\n          <p>Top Selling Item: {{ topSellingItem }}</p>\r\n        </div>\r\n  \r\n        <div class=\"charts\">\r\n          <div class=\"hourly-chart\">\r\n            <h2>Hourly Performance</h2>\r\n            <!-- Add your hourly performance chart here -->\r\n          </div>\r\n  \r\n          <div class=\"monthly-chart\">\r\n            <h2>Monthly Performance</h2>\r\n            <!-- Add your monthly performance chart here -->\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        selectedDate: null,\r\n        salesData: [\r\n          // Your sales data here, e.g., { date: '2023-01-01', total: 500, staff: 'John', item: 'Burger' }\r\n        ],\r\n      };\r\n    },\r\n    computed: {\r\n      totalSales() {\r\n        return this.salesData\r\n          .filter((sale) => !this.selectedDate || sale.date === this.selectedDate)\r\n          .reduce((total, sale) => total + sale.total, 0);\r\n      },\r\n      salesByStaff() {\r\n        const salesByStaff = {};\r\n        this.salesData\r\n          .filter((sale) => !this.selectedDate || sale.date === this.selectedDate)\r\n          .forEach((sale) => {\r\n            if (!salesByStaff[sale.staff]) {\r\n              salesByStaff[sale.staff] = 0;\r\n            }\r\n            salesByStaff[sale.staff] += sale.total;\r\n          });\r\n        return salesByStaff;\r\n      },\r\n      topSellingItem() {\r\n        const items = {};\r\n        this.salesData\r\n          .filter((sale) => !this.selectedDate || sale.date === this.selectedDate)\r\n          .forEach((sale) => {\r\n            if (!items[sale.item]) {\r\n              items[sale.item] = 0;\r\n            }\r\n            items[sale.item] += sale.total;\r\n          });\r\n        const sortedItems = Object.keys(items).sort((a, b) => items[b] - items[a]);\r\n        return sortedItems[0] || 'N/A';\r\n      },\r\n    },\r\n    methods: {\r\n      filterSales() {\r\n        // Implement filtering logic based on selected date\r\n      },\r\n      formatCurrency(value) {\r\n        return `$${value.toFixed(2)}`;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  #app {\r\n    font-family: Avenir, Helvetica, Arial, sans-serif;\r\n    text-align: center;\r\n    color: #2c3e50;\r\n  }\r\n  \r\n  header {\r\n    background-color: #3498db;\r\n    padding: 20px;\r\n    color: white;\r\n  }\r\n  \r\n  main {\r\n    margin: 20px;\r\n  }\r\n  \r\n  .filters {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .summary {\r\n    background-color: #ecf0f1;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .charts {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  .hourly-chart,\r\n  .monthly-chart {\r\n    flex: 1;\r\n    background-color: #ecf0f1;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    margin-right: 10px;\r\n  }\r\n  \r\n  /* Add your chart styles here */\r\n  \r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  li {\r\n    margin: 5px 0;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,EAAE,EAAC;AAAK;gCACXC,mBAAA,CAES,iB,aADPA,mBAAA,CAAmC,YAA/B,4BAA0B,E;;EAGzBC,KAAK,EAAC;AAAS;gCAClBD,mBAAA,CAA4C;EAArCE,GAAG,EAAC;AAAY,GAAC,cAAY;;EAIjCD,KAAK,EAAC;AAAS;gCAClBD,mBAAA,CAAsB,YAAlB,eAAa;gCAEjBA,mBAAA,CAAsB,WAAnB,iBAAe;gCASpBA,mBAAA,CAUM;EAVDC,KAAK,EAAC;AAAQ,I,aACjBD,mBAAA,CAGM;EAHDC,KAAK,EAAC;AAAc,I,aACvBD,mBAAA,CAA2B,YAAvB,oBAAkB,G,aACtBG,mBAAA,4CAA+C,C,gBAGjDH,mBAAA,CAGM;EAHDC,KAAK,EAAC;AAAe,I,aACxBD,mBAAA,CAA4B,YAAxB,qBAAmB,G,aACvBG,mBAAA,6CAAgD,C;;uBA9BxDC,mBAAA,CAkCM,OAlCNC,UAkCM,GAjCJC,UAES,EACTN,mBAAA,CA6BO,eA5BLA,mBAAA,CAGM,OAHNO,UAGM,GAFJC,UAA4C,E,gBAC5CR,mBAAA,CAAkF;IAA3ES,IAAI,EAAC,MAAM;IAACV,EAAE,EAAC,YAAY;+DAAUW,KAAA,CAAAC,YAAY,GAAAC,MAAA;IAAGC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;iEAAlCL,KAAA,CAAAC,YAAY,E,KAG1DX,mBAAA,CAUM,OAVNkB,UAUM,GATJC,UAAsB,EACtBnB,mBAAA,CAAoD,WAAjD,eAAa,GAAAoB,gBAAA,CAAGJ,QAAA,CAAAK,cAAc,CAACL,QAAA,CAAAM,UAAU,mBAC5CC,UAAsB,EACtBvB,mBAAA,CAIK,c,kBAHHI,mBAAA,CAEKoB,SAAA,QAAAC,WAAA,CAFwBT,QAAA,CAAAU,YAAY,GAA7BC,KAAK,EAAEC,KAAK;yBAAxBxB,mBAAA,CAEK;MAFuCyB,GAAG,EAAED;IAAK,GAAAR,gBAAA,CACjDQ,KAAK,IAAG,IAAE,GAAAR,gBAAA,CAAGJ,QAAA,CAAAK,cAAc,CAACM,KAAK;oCAGxC3B,mBAAA,CAA6C,WAA1C,oBAAkB,GAAAoB,gBAAA,CAAGJ,QAAA,CAAAc,cAAc,iB,GAGxCC,UAUM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}