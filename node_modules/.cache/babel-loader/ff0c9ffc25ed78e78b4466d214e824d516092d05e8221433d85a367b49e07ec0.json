{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-bd689dbc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"flavor-votes-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title\"\n}, \"Customer Feedback\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"flavor-chart\"\n};\nconst _hoisted_4 = {\n  class: \"flavor-label\"\n};\nconst _hoisted_5 = {\n  class: \"vote-count\"\n};\nconst _hoisted_6 = {\n  class: \"flavor-bar\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"flavor-label\"\n}, \"Customer Service\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"vote-count\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"p\", null, _toDisplayString($data.service), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.flavors, flavor => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: flavor,\n      class: \"flavor-bar\"\n    }, [_createElementVNode(\"p\", _hoisted_4, _toDisplayString(flavor), 1 /* TEXT */), _createElementVNode(\"div\", {\n      class: \"bar\",\n      style: _normalizeStyle({\n        width: $options.getPercentage(flavor) + '%',\n        backgroundColor: $options.getBarColor(flavor)\n      })\n    }, null, 4 /* STYLE */), _createElementVNode(\"p\", _hoisted_5, _toDisplayString($options.getVoteCount(flavor)) + \" votes\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", {\n    class: \"bar\",\n    style: _normalizeStyle({\n      width: $options.getPercentage($data.serviceTotal) + '%',\n      backgroundColor: $options.getBarColor(_ctx.flavor)\n    })\n  }, null, 4 /* STYLE */), _createElementVNode(\"p\", _hoisted_8, _toDisplayString($options.getVoteCount($data.serviceTotal)) + \" votes\", 1 /* TEXT */)])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$data","service","_hoisted_3","_Fragment","_renderList","flavors","flavor","key","_hoisted_4","style","_normalizeStyle","width","$options","getPercentage","backgroundColor","getBarColor","_hoisted_5","getVoteCount","_hoisted_6","_hoisted_7","serviceTotal","_ctx","_hoisted_8"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frostycrunch\\src\\components\\MainReviews.vue"],"sourcesContent":["<template>\r\n    <div class=\"flavor-votes-container\">\r\n      <h1 class=\"title\">Customer Feedback</h1>\r\n        <p>{{ service }}</p>\r\n      <div class=\"flavor-chart\">\r\n        <div v-for=\"flavor in flavors\" :key=\"flavor\" class=\"flavor-bar\">\r\n          <p class=\"flavor-label\">{{ flavor }}</p>\r\n          <div class=\"bar\" :style=\"{ width: getPercentage(flavor) + '%', backgroundColor: getBarColor(flavor) }\"></div>\r\n          <p class=\"vote-count\">{{ getVoteCount(flavor) }} votes</p>\r\n        </div>\r\n        <div class=\"flavor-bar\">\r\n          <p class=\"flavor-label\">Customer Service</p>\r\n          <div class=\"bar\" :style=\"{ width: getPercentage(serviceTotal) + '%', backgroundColor: getBarColor(flavor) }\"></div>\r\n          <p class=\"vote-count\">{{ getVoteCount(serviceTotal) }} votes</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n<script>  \r\nexport default{\r\n    \r\n    data(){\r\n        return{\r\n            reviews:[],\r\n            flavors: [\"Milk Chocolate\", \"Dark Chocolate\", \"White Chocolate\", \"Peanut Butter\", \"Salted Caramel\"],\r\n            service:[],\r\n            serviceTotal:0\r\n        }\r\n    },\r\n    methods: {\r\n    getVoteCount(flavor) {\r\n      const flavorReviews = this.reviews.filter((review) => review.flavor === flavor);\r\n      return flavorReviews.length;\r\n    },\r\n    getAverageFoodQuality(flavor) {\r\n      const flavorReviews = this.reviews.filter((review) => review.flavor === flavor);\r\n      const totalFoodQuality = flavorReviews.reduce((acc, review) => acc + review.foodQuality, 0);\r\n      return flavorReviews.length === 0 ? 0 : totalFoodQuality / flavorReviews.length;\r\n    },\r\n    getPercentage(flavor) {\r\n      return this.getAverageFoodQuality(flavor) * 10; // Convert to percentage\r\n    },\r\n    getBarColor(flavor) {\r\n      const averageFoodQuality = this.getAverageFoodQuality(flavor);\r\n      if (averageFoodQuality < 5) {\r\n        return 'red';\r\n      } else if (averageFoodQuality >= 5 && averageFoodQuality <= 7) {\r\n        return 'orange';\r\n      } else {\r\n        return 'green';\r\n      }\r\n    },\r\n  },\r\n    beforeCreate(){\r\n    fetch('https://my-vue-app-8da88-default-rtdb.firebaseio.com/ruv.json').then(data=>{\r\n      if(data.ok){\r\n        return data.json()\r\n      }\r\n    }).then(info=>{\r\n      let arr = []\r\n      arr.push(info)\r\n      arr.forEach(item=>{\r\n        \r\n        Object.values(item).forEach(item => {\r\n    this.reviews.push(item)\r\n    this.service.push(item.service) \r\n    this.serviceTotal= service.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n\r\n  });\r\n            \r\n\r\n        \r\n      })\r\n        \r\n    })\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.flavor-votes-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 600px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  color: #333;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.flavor-chart {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.flavor-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 10px 0;\r\n}\r\n\r\n.flavor-label {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n.bar {\r\n  flex: 5;\r\n  height: 20px;\r\n  background-color: #3498db; /* Blue color for the bars */\r\n}\r\n\r\n.vote-count {\r\n  flex: 1;\r\n  margin-left: 10px;\r\n  text-align: right;\r\n  color: #333;\r\n}\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAwB;gEACjCC,mBAAA,CAAwC;EAApCD,KAAK,EAAC;AAAO,GAAC,mBAAiB;;EAE9BA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAc;;EAEpBA,KAAK,EAAC;AAAY;;EAElBA,KAAK,EAAC;AAAY;gEACrBC,mBAAA,CAA4C;EAAzCD,KAAK,EAAC;AAAc,GAAC,kBAAgB;;EAErCA,KAAK,EAAC;AAAY;;uBAZ3BE,mBAAA,CAeM,OAfNC,UAeM,GAdJC,UAAwC,EACtCH,mBAAA,CAAoB,WAAAI,gBAAA,CAAdC,KAAA,CAAAC,OAAO,kBACfN,mBAAA,CAWM,OAXNO,UAWM,I,kBAVJN,mBAAA,CAIMO,SAAA,QAAAC,WAAA,CAJgBJ,KAAA,CAAAK,OAAO,EAAjBC,MAAM;yBAAlBV,mBAAA,CAIM;MAJ0BW,GAAG,EAAED,MAAM;MAAEZ,KAAK,EAAC;QACjDC,mBAAA,CAAwC,KAAxCa,UAAwC,EAAAT,gBAAA,CAAbO,MAAM,kBACjCX,mBAAA,CAA6G;MAAxGD,KAAK,EAAC,KAAK;MAAEe,KAAK,EAAAC,eAAA;QAAAC,KAAA,EAAWC,QAAA,CAAAC,aAAa,CAACP,MAAM;QAAAQ,eAAA,EAA0BF,QAAA,CAAAG,WAAW,CAACT,MAAM;MAAA;6BAClGX,mBAAA,CAA0D,KAA1DqB,UAA0D,EAAAjB,gBAAA,CAAjCa,QAAA,CAAAK,YAAY,CAACX,MAAM,KAAI,QAAM,gB;kCAExDX,mBAAA,CAIM,OAJNuB,UAIM,GAHJC,UAA4C,EAC5CxB,mBAAA,CAAmH;IAA9GD,KAAK,EAAC,KAAK;IAAEe,KAAK,EAAAC,eAAA;MAAAC,KAAA,EAAWC,QAAA,CAAAC,aAAa,CAACb,KAAA,CAAAoB,YAAY;MAAAN,eAAA,EAA0BF,QAAA,CAAAG,WAAW,CAACM,IAAA,CAAAf,MAAM;IAAA;2BACxGX,mBAAA,CAAgE,KAAhE2B,UAAgE,EAAAvB,gBAAA,CAAvCa,QAAA,CAAAK,YAAY,CAACjB,KAAA,CAAAoB,YAAY,KAAI,QAAM,gB"},"metadata":{},"sourceType":"module","externalDependencies":[]}