{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-bd689dbc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"flavor-votes-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title\"\n}, \"Flavor Votes\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"flavor-chart\"\n};\nconst _hoisted_4 = {\n  class: \"flavor-label\"\n};\nconst _hoisted_5 = {\n  class: \"vote-count\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.flavors, flavor => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: flavor,\n      class: \"flavor-bar\"\n    }, [_createElementVNode(\"p\", _hoisted_4, _toDisplayString(flavor), 1 /* TEXT */), _createElementVNode(\"div\", {\n      class: \"bar\",\n      style: _normalizeStyle({\n        width: $options.getPercentage(flavor) + '%',\n        backgroundColor: _ctx.getBarColor(flavor)\n      })\n    }, null, 4 /* STYLE */), _createElementVNode(\"p\", _hoisted_5, _toDisplayString($options.getVoteCount(flavor)) + \" votes\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","flavors","flavor","key","_hoisted_4","_toDisplayString","style","_normalizeStyle","width","$options","getPercentage","backgroundColor","_ctx","getBarColor","_hoisted_5","getVoteCount"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frostycrunch\\src\\components\\MainReviews.vue"],"sourcesContent":["<template>\r\n    <div class=\"flavor-votes-container\">\r\n      <h1 class=\"title\">Flavor Votes</h1>\r\n  \r\n      <div class=\"flavor-chart\">\r\n        <div v-for=\"flavor in flavors\" :key=\"flavor\" class=\"flavor-bar\">\r\n          <p class=\"flavor-label\">{{ flavor }}</p>\r\n          <div class=\"bar\" :style=\"{ width: getPercentage(flavor) + '%', backgroundColor: getBarColor(flavor) }\"></div>\r\n          <p class=\"vote-count\">{{ getVoteCount(flavor) }} votes</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n<script>  \r\nexport default{\r\n    data(){\r\n        return{\r\n            reviews:[],\r\n            flavors: [\"Milk Chocolate\", \"Dark Chocolate\", \"White Chocolate\", \"Peanut Butter\", \"Salted Caramel\"],\r\n\r\n\r\n        }\r\n    },\r\n    methods: {\r\n    getVoteCount(flavor) {\r\n      const flavorReviews = this.reviews.filter((review) => review.flavor === flavor);\r\n      return flavorReviews.length;\r\n    },\r\n    getPercentage(flavor) {\r\n      const flavorReviews = this.reviews.filter((review) => review.flavor === flavor);\r\n      const totalVotes = flavorReviews.reduce((acc, review) => acc + review.foodQuality + review.service, 0);\r\n      const averageVotes = totalVotes / flavorReviews.length / 2; // Divide by 2 to get an average between foodQuality and service\r\n      return (averageVotes / 10) * 100; // Convert to percentage\r\n    },\r\n  },\r\n    beforeCreate(){\r\n    fetch('https://my-vue-app-8da88-default-rtdb.firebaseio.com/ruv.json').then(data=>{\r\n      if(data.ok){\r\n        return data.json()\r\n      }\r\n    }).then(info=>{\r\n      let arr = []\r\n      arr.push(info)\r\n      arr.forEach(item=>{\r\n        \r\n        Object.values(item).forEach(item => {\r\n    this.reviews.push(item) \r\n  });\r\n            \r\n\r\n        \r\n      })\r\n        \r\n    })\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.flavor-votes-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 600px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  color: #333;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.flavor-chart {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.flavor-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 10px 0;\r\n}\r\n\r\n.flavor-label {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n.bar {\r\n  flex: 5;\r\n  height: 20px;\r\n  background-color: #3498db; /* Blue color for the bars */\r\n}\r\n\r\n.vote-count {\r\n  flex: 1;\r\n  margin-left: 10px;\r\n  text-align: right;\r\n  color: #333;\r\n}\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAwB;gEACjCC,mBAAA,CAAmC;EAA/BD,KAAK,EAAC;AAAO,GAAC,cAAY;;EAEzBA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAc;;EAEpBA,KAAK,EAAC;AAAY;;uBAP3BE,mBAAA,CAUM,OAVNC,UAUM,GATJC,UAAmC,EAEnCH,mBAAA,CAMM,OANNI,UAMM,I,kBALJH,mBAAA,CAIMI,SAAA,QAAAC,WAAA,CAJgBC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;yBAAlBR,mBAAA,CAIM;MAJ0BS,GAAG,EAAED,MAAM;MAAEV,KAAK,EAAC;QACjDC,mBAAA,CAAwC,KAAxCW,UAAwC,EAAAC,gBAAA,CAAbH,MAAM,kBACjCT,mBAAA,CAA6G;MAAxGD,KAAK,EAAC,KAAK;MAAEc,KAAK,EAAAC,eAAA;QAAAC,KAAA,EAAWC,QAAA,CAAAC,aAAa,CAACR,MAAM;QAAAS,eAAA,EAA0BC,IAAA,CAAAC,WAAW,CAACX,MAAM;MAAA;6BAClGT,mBAAA,CAA0D,KAA1DqB,UAA0D,EAAAT,gBAAA,CAAjCI,QAAA,CAAAM,YAAY,CAACb,MAAM,KAAI,QAAM,gB"},"metadata":{},"sourceType":"module","externalDependencies":[]}