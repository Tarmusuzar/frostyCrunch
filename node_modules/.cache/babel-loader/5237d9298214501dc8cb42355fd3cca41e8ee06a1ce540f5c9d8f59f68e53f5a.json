{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      menu: [{\n        id: 1,\n        name: 'Burgers',\n        products: [{\n          id: 1,\n          name: 'Classic Burger',\n          description: 'Delicious beef patty with fresh veggies',\n          price: 20,\n          image: 'burger1.jpg'\n        }, {\n          id: 2,\n          name: 'Veggie Burger',\n          description: 'Vegetarian delight with plant-based patty',\n          price: 18,\n          image: 'burger2.jpg'\n        }]\n      }, {\n        id: 2,\n        name: 'Pizzas',\n        products: [{\n          id: 3,\n          name: 'Margherita Pizza',\n          description: 'Classic pizza with tomato and mozzarella',\n          price: 25,\n          image: 'pizza1.jpg'\n        }, {\n          id: 4,\n          name: 'Pepperoni Pizza',\n          description: 'Loaded with pepperoni and cheese',\n          price: 28,\n          image: 'pizza2.jpg'\n        }]\n      }\n      // Add more categories as needed\n      ],\n      cart: [],\n      isCartDialogOpen: false\n    };\n  },\n  methods: {\n    addToCart(item) {\n      const existingItem = this.cart.find(cartItem => cartItem.id === item.id);\n      if (existingItem) {\n        existingItem.quantity++;\n      } else {\n        this.cart.push({\n          ...item,\n          quantity: 1\n        });\n      }\n    },\n    openCartDialog() {\n      this.isCartDialogOpen = true;\n    },\n    closeCartDialog() {\n      this.isCartDialogOpen = false;\n    },\n    increaseQuantity(index) {\n      this.cart[index].quantity++;\n    },\n    decreaseQuantity(index) {\n      if (this.cart[index].quantity > 1) {\n        this.cart[index].quantity--;\n      } else {\n        this.cart.splice(index, 1);\n      }\n    },\n    calculateTotal() {\n      return this.cart.reduce((total, item) => total + item.price * item.quantity, 0);\n    },\n    checkout() {\n      // Add your checkout logic here\n      console.log('Checkout:', this.cart);\n      // Reset the cart\n      this.cart = [];\n      this.closeCartDialog();\n    }\n  }\n};","map":{"version":3,"names":["data","menu","id","name","products","description","price","image","cart","isCartDialogOpen","methods","addToCart","item","existingItem","find","cartItem","quantity","push","openCartDialog","closeCartDialog","increaseQuantity","index","decreaseQuantity","splice","calculateTotal","reduce","total","checkout","console","log"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frostycrunch\\src\\components\\CreateOwn.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <header class=\"header\">\r\n      <h1>üçî Burger Delight</h1>\r\n      <button class=\"cart-icon\" @click=\"openCartDialog\">\r\n        <i class=\"fas fa-shopping-cart\"></i>\r\n        <span class=\"cart-counter\">{{ cart.length }}</span>\r\n      </button>\r\n    </header>\r\n\r\n    <section class=\"menu\">\r\n      <div class=\"category\" v-for=\"category in menu\" :key=\"category.id\">\r\n        <h2>{{ category.name }}</h2>\r\n        <div class=\"products\">\r\n          <div class=\"product\" v-for=\"product in category.products\" :key=\"product.id\">\r\n            <img :src=\"product.image\" alt=\"Product\" />\r\n            <div class=\"product-details\">\r\n              <h3>{{ product.name }}</h3>\r\n              <p>{{ product.description }}</p>\r\n              <p class=\"price\">{{ product.price.toFixed(2) }} AED</p>\r\n              <button @click=\"addToCart(product)\">Add to Cart</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <dialog v-show=\"isCartDialogOpen\" class=\"cart-dialog\">\r\n      <h2>Your Cart</h2>\r\n      <div class=\"cart-items\">\r\n        <div class=\"cart-item\" v-for=\"(item, index) in cart\" :key=\"index\">\r\n          <img :src=\"item.image\" alt=\"Product\" />\r\n          <div class=\"cart-item-details\">\r\n            <h3>{{ item.name }}</h3>\r\n            <p class=\"price\">{{ item.price.toFixed(2) }} AED</p>\r\n            <div class=\"cart-item-controls\">\r\n              <button @click=\"increaseQuantity(index)\">+</button>\r\n              <button @click=\"decreaseQuantity(index)\">-</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"cart-summary\">\r\n        <p>Total: {{ calculateTotal().toFixed(2) }} AED</p>\r\n        <button @click=\"closeCartDialog\">Close</button>\r\n        <button @click=\"checkout\">Checkout</button>\r\n      </div>\r\n    </dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      menu: [\r\n        {\r\n          id: 1,\r\n          name: 'Burgers',\r\n          products: [\r\n            { id: 1, name: 'Classic Burger', description: 'Delicious beef patty with fresh veggies', price: 20, image: 'burger1.jpg' },\r\n            { id: 2, name: 'Veggie Burger', description: 'Vegetarian delight with plant-based patty', price: 18, image: 'burger2.jpg' },\r\n          ],\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Pizzas',\r\n          products: [\r\n            { id: 3, name: 'Margherita Pizza', description: 'Classic pizza with tomato and mozzarella', price: 25, image: 'pizza1.jpg' },\r\n            { id: 4, name: 'Pepperoni Pizza', description: 'Loaded with pepperoni and cheese', price: 28, image: 'pizza2.jpg' },\r\n          ],\r\n        },\r\n        // Add more categories as needed\r\n      ],\r\n      cart: [],\r\n      isCartDialogOpen: false,\r\n    };\r\n  },\r\n  methods: {\r\n    addToCart(item) {\r\n      const existingItem = this.cart.find((cartItem) => cartItem.id === item.id);\r\n\r\n      if (existingItem) {\r\n        existingItem.quantity++;\r\n      } else {\r\n        this.cart.push({ ...item, quantity: 1 });\r\n      }\r\n    },\r\n    openCartDialog() {\r\n      this.isCartDialogOpen = true;\r\n    },\r\n    closeCartDialog() {\r\n      this.isCartDialogOpen = false;\r\n    },\r\n    increaseQuantity(index) {\r\n      this.cart[index].quantity++;\r\n    },\r\n    decreaseQuantity(index) {\r\n      if (this.cart[index].quantity > 1) {\r\n        this.cart[index].quantity--;\r\n      } else {\r\n        this.cart.splice(index, 1);\r\n      }\r\n    },\r\n    calculateTotal() {\r\n      return this.cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n    },\r\n    checkout() {\r\n      // Add your checkout logic here\r\n      console.log('Checkout:', this.cart);\r\n      // Reset the cart\r\n      this.cart = [];\r\n      this.closeCartDialog();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n  font-family: 'Arial', sans-serif;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: #f8f8f8;\r\n  color: #333;\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: #e74c3c;\r\n  padding: 1rem;\r\n  color: #fff;\r\n}\r\n\r\n.cart-icon {\r\n  background-color: #fff;\r\n  border: none;\r\n  border-radius: 50%;\r\n  padding: 10px;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\n\r\n.cart-counter {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  background-color: #e74c3c;\r\n  color: #fff;\r\n  border-radius: 50%;\r\n  padding: 5px;\r\n}\r\n\r\n.menu {\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 2rem;\r\n}\r\n\r\n.category {\r\n  margin: 0 1rem;\r\n}\r\n\r\n.products {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n}\r\n\r\n.product {\r\n  background-color: #fff;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  transition: transform 0.3s ease-in-out;\r\n}\r\n\r\n.product:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.product img {\r\n  width: 100%;\r\n  height: 150px;\r\n  object-fit: cover;\r\n}\r\n\r\n.product-details {\r\n  padding: 1rem;\r\n  text-align: left;\r\n}\r\n\r\n.price {\r\n  font-weight: bold;\r\n  color: #e74c3c;\r\n}\r\n\r\nbutton {\r\n  background-color: #e74c3c;\r\n  color: #fff;\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #c0392b;\r\n}\r\n\r\n.cart-dialog {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1;\r\n}\r\n\r\n.cart-dialog h2 {\r\n  color: #e74c3c;\r\n}\r\n\r\n.cart-items {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  max-height: 70vh;\r\n  overflow-y: auto;\r\n}\r\n\r\n.cart-item {\r\n  background-color: #fff;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  width: 200px;\r\n  transition: transform 0.3s ease-in-out;\r\n}\r\n\r\n.cart-item:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.cart-item img {\r\n  width: 100%;\r\n  height: 120px;\r\n  object-fit: cover;\r\n}\r\n\r\n.cart-item-details {\r\n  padding: 1rem;\r\n  text-align: left;\r\n}\r\n\r\n.cart-item-controls {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.cart-summary {\r\n  margin-top: 20px;\r\n  text-align: left;\r\n}\r\n\r\n.cart-summary p {\r\n  margin: 0;\r\n}\r\n\r\n.order-button {\r\n  background-color: #e74c3c;\r\n  color: #fff;\r\n  padding: 15px 30px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.order-button:hover {\r\n  background-color: #c0392b;\r\n}\r\n\r\n@media only screen and (max-width: 767px) {\r\n  .menu {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .category {\r\n    width: 100%;\r\n    margin: 0 0 1rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AAoDA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CACJ;QACEC,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,SAAS;QACfC,QAAQ,EAAE,CACR;UAAEF,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,gBAAgB;UAAEE,WAAW,EAAE,yCAAyC;UAAEC,KAAK,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAc,CAAC,EAC1H;UAAEL,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,eAAe;UAAEE,WAAW,EAAE,2CAA2C;UAAEC,KAAK,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAc,CAAC;MAE/H,CAAC,EACD;QACEL,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,QAAQ;QACdC,QAAQ,EAAE,CACR;UAAEF,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,kBAAkB;UAAEE,WAAW,EAAE,0CAA0C;UAAEC,KAAK,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAa,CAAC,EAC5H;UAAEL,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,iBAAiB;UAAEE,WAAW,EAAE,kCAAkC;UAAEC,KAAK,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAa,CAAC;MAEvH;MACA;MAAA,CACD;MACDC,IAAI,EAAE,EAAE;MACRC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAACC,IAAI,EAAE;MACd,MAAMC,YAAW,GAAI,IAAI,CAACL,IAAI,CAACM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACb,EAAC,KAAMU,IAAI,CAACV,EAAE,CAAC;MAE1E,IAAIW,YAAY,EAAE;QAChBA,YAAY,CAACG,QAAQ,EAAE;MACzB,OAAO;QACL,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC;UAAE,GAAGL,IAAI;UAAEI,QAAQ,EAAE;QAAE,CAAC,CAAC;MAC1C;IACF,CAAC;IACDE,cAAcA,CAAA,EAAG;MACf,IAAI,CAACT,gBAAe,GAAI,IAAI;IAC9B,CAAC;IACDU,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACV,gBAAe,GAAI,KAAK;IAC/B,CAAC;IACDW,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACb,IAAI,CAACa,KAAK,CAAC,CAACL,QAAQ,EAAE;IAC7B,CAAC;IACDM,gBAAgBA,CAACD,KAAK,EAAE;MACtB,IAAI,IAAI,CAACb,IAAI,CAACa,KAAK,CAAC,CAACL,QAAO,GAAI,CAAC,EAAE;QACjC,IAAI,CAACR,IAAI,CAACa,KAAK,CAAC,CAACL,QAAQ,EAAE;MAC7B,OAAO;QACL,IAAI,CAACR,IAAI,CAACe,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC5B;IACF,CAAC;IACDG,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAAChB,IAAI,CAACiB,MAAM,CAAC,CAACC,KAAK,EAAEd,IAAI,KAAKc,KAAI,GAAId,IAAI,CAACN,KAAI,GAAIM,IAAI,CAACI,QAAQ,EAAE,CAAC,CAAC;IACjF,CAAC;IACDW,QAAQA,CAAA,EAAG;MACT;MACAC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACrB,IAAI,CAAC;MACnC;MACA,IAAI,CAACA,IAAG,GAAI,EAAE;MACd,IAAI,CAACW,eAAe,CAAC,CAAC;IACxB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}