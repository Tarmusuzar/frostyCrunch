{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"line-graph\"\n};\nconst _hoisted_2 = [\"width\", \"height\"];\nconst _hoisted_3 = [\"points\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(), _createElementBlock(\"svg\", {\n    width: $data.width,\n    height: $data.height\n  }, [_createElementVNode(\"polyline\", {\n    points: $options.generatePolylinePoints,\n    fill: \"none\",\n    stroke: \"#3498db\",\n    \"stroke-width\": \"2\"\n  }, null, 8 /* PROPS */, _hoisted_3)], 8 /* PROPS */, _hoisted_2))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","width","$data","height","_createElementVNode","points","$options","generatePolylinePoints","fill","stroke"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frosty\\src\\components\\Admin\\AdminDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"line-graph\">\r\n    <svg :width=\"width\" :height=\"height\">\r\n      <polyline :points=\"generatePolylinePoints\" fill=\"none\" stroke=\"#3498db\" stroke-width=\"2\" />\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      width: 400,\r\n      height: 200,\r\n      days: Array.from({ length: 30 }, (_, index) => index + 1), // Days of the month\r\n      chartData: this.generateRandomData(30, 50, 200), // 30 days, sales range between 50 and 200\r\n      scaleX: null,\r\n      scaleY: null,\r\n    };\r\n  },\r\n  computed: {\r\n    generatePolylinePoints() {\r\n      return this.chartData.map((value, index) => `${this.scaleX(index)} ${this.scaleY(value)}`).join(' ');\r\n    },\r\n  },\r\n  methods: {\r\n    generateRandomData(count, min, max) {\r\n      return Array.from({ length: count }, () => Math.floor(Math.random() * (max - min + 1) + min));\r\n    },\r\n  },\r\n  watch: {\r\n    days: {\r\n      handler(newDays) {\r\n        this.scaleX = this.createScale(newDays.length, 0, this.width);\r\n      },\r\n      immediate: true,\r\n    },\r\n    chartData: {\r\n      handler(newData) {\r\n        this.scaleY = this.createScale(Math.max(...newData), 0, this.height);\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    createScale(domainMax, rangeMin, rangeMax) {\r\n      return function (value) {\r\n        return ((value / domainMax) * (rangeMax - rangeMin)).toFixed(2);\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.line-graph {\r\n  width: 100%;\r\n  height: 240px; /* Adjust height as needed */\r\n  border: 1px solid #ddd;\r\n  margin-top: 20px;\r\n}\r\n\r\nsvg {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\npolyline {\r\n  fill: none;\r\n  stroke: #3498db; /* Blue */\r\n  stroke-width: 2;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAY;;;;uBAAvBC,mBAAA,CAIM,OAJNC,UAIM,I,cAHJD,mBAAA,CAEM;IAFAE,KAAK,EAAEC,KAAA,CAAAD,KAAK;IAAGE,MAAM,EAAED,KAAA,CAAAC;MAC3BC,mBAAA,CAA2F;IAAhFC,MAAM,EAAEC,QAAA,CAAAC,sBAAsB;IAAEC,IAAI,EAAC,MAAM;IAACC,MAAM,EAAC,SAAS;IAAC,cAAY,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}