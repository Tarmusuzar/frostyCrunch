{"ast":null,"code":"import MainLoading from './MainLoading.vue';\nexport default {\n  methods: {\n    off() {\n      this.loading = false;\n    },\n    turnOn() {\n      this.loading = true;\n    }\n  },\n  mounted() {\n    setTimeout(() => {\n      // Turn off loading after the simulated delay\n      this.loading = false;\n    }, 600);\n  },\n  components: {\n    MainLoading\n  },\n  props: ['selectedCategory'],\n  emits: ['closePopup', 'itemSelected'],\n  data() {\n    return {\n      loading: false\n    };\n  }\n};","map":{"version":3,"names":["MainLoading","methods","off","loading","turnOn","mounted","setTimeout","components","props","emits","data"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frostycrunch\\src\\components\\Reusables\\PopUp.vue"],"sourcesContent":["<template>\r\n  <main-loading :loading=\"loading\" @turnOn=\"turnOn\"></main-loading>\r\n    <div  class=\"popup\">\r\n       <div class=\"sub\">\r\n        <div class=\"innav\">\r\n            <button class=\"close-btn\" @click=\"$emit('closePopup')\">Back</button>\r\n\r\n\r\n          <div v-for=\"item in selectedCategory.items\" :key=\"item.id\" class=\"item\" @click=\"$emit('itemSelected',selectedCategory.name)\">\r\n          <div class=\"itm\">\r\n            <img :src=\"require(`@/assets/${item.image}`)\" alt=\"Item Image\" />\r\n             <div class=\"item-details\">\r\n            <p class=\"item-name\" style=\"white-space: nowrap;\">{{ item.name }}</p>\r\n            <p class=\"description\">{{ item.description }}</p>\r\n            <p class=\"price\">Dhs {{ item.price }} </p>\r\n          </div>\r\n          </div>\r\n          <i @click=\"addToCart(item)\" class=\"fas fa-cart-plus\"></i>\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"innav\">\r\n            <button class=\"close-btn\" @click=\"$emit('closePopup')\">Back</button>\r\n\r\n\r\n        </div>\r\n       </div>\r\n</template>\r\n<script>\r\nimport MainLoading from './MainLoading.vue';\r\n    export default{\r\n      methods:{\r\n          off(){\r\n            this.loading = false\r\n        }, \r\n        turnOn(){\r\n          this.loading = true\r\n        }\r\n        },\r\n        mounted(){\r\n          setTimeout(() => {\r\n      // Turn off loading after the simulated delay\r\n      this.loading = false;\r\n    }, 600);\r\n    \r\n\r\n        },\r\n        \r\n        components:{MainLoading},\r\n        props:['selectedCategory'],\r\n        emits:['closePopup','itemSelected'],\r\n        data(){\r\n          return{\r\n            loading:false\r\n          }\r\n        }\r\n    }\r\n</script>\r\n<style scoped>\r\n.popup {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(51, 51, 51, 0.95);\r\n\r\n  z-index: 999;\r\n  overflow: scroll;\r\n}\r\n.sub{\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.popup-title {\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  color: #fff;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.itm{\r\n  display: flex;\r\n  width: 100%;\r\n  \r\n}\r\n\r\n.item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n  width: 90%;\r\n  padding: .4rem;\r\n  border-radius: 5px;\r\n  justify-content: space-between;\r\n  padding-right:  2rem;\r\n  \r\n\r\n\r\n}\r\n\r\n.item img {\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 10px;\r\n  margin-right: 20px;\r\n  max-width: 5rem;\r\n}\r\n\r\n.item-details {\r\n  flex-grow: 1;\r\n}\r\n.add{\r\n    flex: 1;\r\n    padding: .2em .4rem;\r\n    color:  white;\r\n    border: 1px solid rgb(226, 222, 222);\r\n    border-radius: 4px;\r\n    background-color: rgb(9, 189, 24);\r\n   min-width: 5rem;\r\n\r\n}\r\n\r\n.item-name {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.description {\r\n  color: #555;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.price {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.close-btn {\r\n  background-color: #dc3545; /* McDonald's Red */\r\n  color: #fff;\r\n  font-size: 1.2rem;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 5px;\r\n  width: 6rem;\r\n  padding: 1rem;\r\n\r\n  text-align: center;\r\n  transition: background-color 0.3s ease-in-out;\r\n}\r\n\r\n.close-btn:hover {\r\n  background-color: #c82333; /* Slightly darker red on hover */\r\n}\r\n.innav{\r\nwidth: 90%;\r\nmargin-bottom: 1rem;\r\n\r\n}\r\n</style>"],"mappings":"AA+BA,OAAOA,WAAU,MAAO,mBAAmB;AACvC,eAAc;EACZC,OAAO,EAAC;IACJC,GAAGA,CAAA,EAAE;MACH,IAAI,CAACC,OAAM,GAAI,KAAI;IACvB,CAAC;IACDC,MAAMA,CAAA,EAAE;MACN,IAAI,CAACD,OAAM,GAAI,IAAG;IACpB;EACA,CAAC;EACDE,OAAOA,CAAA,EAAE;IACPC,UAAU,CAAC,MAAM;MACrB;MACA,IAAI,CAACH,OAAM,GAAI,KAAK;IACtB,CAAC,EAAE,GAAG,CAAC;EAGH,CAAC;EAEDI,UAAU,EAAC;IAACP;EAAW,CAAC;EACxBQ,KAAK,EAAC,CAAC,kBAAkB,CAAC;EAC1BC,KAAK,EAAC,CAAC,YAAY,EAAC,cAAc,CAAC;EACnCC,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJP,OAAO,EAAC;IACV;EACF;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}