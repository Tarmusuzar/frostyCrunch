{"ast":null,"code":"export default {\n  data() {\n    return {\n      width: 400,\n      height: 200,\n      days: Array.from({\n        length: 30\n      }, (_, index) => index + 1),\n      // Days of the month\n      chartData: this.generateRandomData(30, 50, 200),\n      // 30 days, sales range between 50 and 200\n      scaleX: null,\n      scaleY: null\n    };\n  },\n  computed: {\n    generatePolylinePoints() {\n      return this.chartData.map((value, index) => `${this.scaleX(index)} ${this.scaleY(value)}`).join(' ');\n    }\n  },\n  methods: {\n    generateRandomData(count, min, max) {\n      return Array.from({\n        length: count\n      }, () => Math.floor(Math.random() * (max - min + 1) + min));\n    }\n  },\n  watch: {\n    days: {\n      handler(newDays) {\n        this.scaleX = this.createScale(newDays.length, 0, this.width);\n      },\n      immediate: true\n    },\n    chartData: {\n      handler(newData) {\n        this.scaleY = this.createScale(Math.max(...newData), 0, this.height);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    createScale(domainMax, rangeMin, rangeMax) {\n      return function (value) {\n        return (value / domainMax * (rangeMax - rangeMin)).toFixed(2);\n      };\n    }\n  }\n};","map":{"version":3,"names":["data","width","height","days","Array","from","length","_","index","chartData","generateRandomData","scaleX","scaleY","computed","generatePolylinePoints","map","value","join","methods","count","min","max","Math","floor","random","watch","handler","newDays","createScale","immediate","newData","domainMax","rangeMin","rangeMax","toFixed"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frosty\\src\\components\\Admin\\AdminDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"line-graph\">\r\n    <svg :width=\"width\" :height=\"height\">\r\n      <polyline :points=\"generatePolylinePoints\" fill=\"none\" stroke=\"#3498db\" stroke-width=\"2\" />\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      width: 400,\r\n      height: 200,\r\n      days: Array.from({ length: 30 }, (_, index) => index + 1), // Days of the month\r\n      chartData: this.generateRandomData(30, 50, 200), // 30 days, sales range between 50 and 200\r\n      scaleX: null,\r\n      scaleY: null,\r\n    };\r\n  },\r\n  computed: {\r\n    generatePolylinePoints() {\r\n      return this.chartData.map((value, index) => `${this.scaleX(index)} ${this.scaleY(value)}`).join(' ');\r\n    },\r\n  },\r\n  methods: {\r\n    generateRandomData(count, min, max) {\r\n      return Array.from({ length: count }, () => Math.floor(Math.random() * (max - min + 1) + min));\r\n    },\r\n  },\r\n  watch: {\r\n    days: {\r\n      handler(newDays) {\r\n        this.scaleX = this.createScale(newDays.length, 0, this.width);\r\n      },\r\n      immediate: true,\r\n    },\r\n    chartData: {\r\n      handler(newData) {\r\n        this.scaleY = this.createScale(Math.max(...newData), 0, this.height);\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    createScale(domainMax, rangeMin, rangeMax) {\r\n      return function (value) {\r\n        return ((value / domainMax) * (rangeMax - rangeMin)).toFixed(2);\r\n      };\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.line-graph {\r\n  width: 100%;\r\n  height: 240px; /* Adjust height as needed */\r\n  border: 1px solid #ddd;\r\n  margin-top: 20px;\r\n}\r\n\r\nsvg {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\npolyline {\r\n  fill: none;\r\n  stroke: #3498db; /* Blue */\r\n  stroke-width: 2;\r\n}\r\n</style>\r\n"],"mappings":"AASA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXC,IAAI,EAAEC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAI,GAAI,CAAC,CAAC;MAAE;MAC3DC,SAAS,EAAE,IAAI,CAACC,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;MAAE;MACjDC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,sBAAsBA,CAAA,EAAG;MACvB,OAAO,IAAI,CAACL,SAAS,CAACM,GAAG,CAAC,CAACC,KAAK,EAAER,KAAK,KAAM,GAAE,IAAI,CAACG,MAAM,CAACH,KAAK,CAAC,IAAI,IAAI,CAACI,MAAM,CAACI,KAAK,CAAE,EAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IACtG;EACF,CAAC;EACDC,OAAO,EAAE;IACPR,kBAAkBA,CAACS,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAE;MAClC,OAAOjB,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEa;MAAM,CAAC,EAAE,MAAMG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,KAAKH,GAAE,GAAID,GAAE,GAAI,CAAC,IAAIA,GAAG,CAAC,CAAC;IAC/F;EACF,CAAC;EACDK,KAAK,EAAE;IACLtB,IAAI,EAAE;MACJuB,OAAOA,CAACC,OAAO,EAAE;QACf,IAAI,CAAChB,MAAK,GAAI,IAAI,CAACiB,WAAW,CAACD,OAAO,CAACrB,MAAM,EAAE,CAAC,EAAE,IAAI,CAACL,KAAK,CAAC;MAC/D,CAAC;MACD4B,SAAS,EAAE;IACb,CAAC;IACDpB,SAAS,EAAE;MACTiB,OAAOA,CAACI,OAAO,EAAE;QACf,IAAI,CAAClB,MAAK,GAAI,IAAI,CAACgB,WAAW,CAACN,IAAI,CAACD,GAAG,CAAC,GAAGS,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC5B,MAAM,CAAC;MACtE,CAAC;MACD2B,SAAS,EAAE;IACb;EACF,CAAC;EACDX,OAAO,EAAE;IACPU,WAAWA,CAACG,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;MACzC,OAAO,UAAUjB,KAAK,EAAE;QACtB,OAAO,CAAEA,KAAI,GAAIe,SAAS,IAAKE,QAAO,GAAID,QAAQ,CAAC,EAAEE,OAAO,CAAC,CAAC,CAAC;MACjE,CAAC;IACH;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}