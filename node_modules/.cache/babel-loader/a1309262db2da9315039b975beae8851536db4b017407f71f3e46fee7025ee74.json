{"ast":null,"code":"import { initializeApp, getApps } from 'firebase/compat/app';\nimport { getDatabase } from 'firebase/compat/database';\nexport default {\n  created() {\n    // Check if Firebase app is already initialized\n    if (!getApps().length) {\n      // If not initialized, initialize Firebase\n      const firebaseConfig = {\n        apiKey: \"YOUR_API_KEY\",\n        authDomain: \"YOUR_AUTH_DOMAIN\",\n        projectId: \"YOUR_PROJECT_ID\",\n        storageBucket: \"YOUR_STORAGE_BUCKET\",\n        messagingSenderId: \"YOUR_MESSAGING_SENDER_ID\",\n        appId: \"YOUR_APP_ID\"\n      };\n      initializeApp(firebaseConfig);\n    }\n\n    // Get Firebase database reference\n    const db = getDatabase();\n\n    // Your Firebase database reference\n    // Modify 'frostyOrders' to your actual database reference\n    const frostyOrdersRef = db.ref('frostyOrders');\n\n    // Listen for child_added events in the frostyOrders node\n    frostyOrdersRef.on('child_added', childSnapshot => {\n      const newItem = childSnapshot.val();\n\n      // Do something with the newItem (e.g., update state or trigger a function)\n      console.log(newItem);\n    });\n  }\n};","map":{"version":3,"names":["initializeApp","getApps","getDatabase","created","length","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","frostyOrdersRef","ref","on","childSnapshot","newItem","val","console","log"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frostycrunch\\src\\components\\Admin\\AdminOrders\\NewOrders.vue"],"sourcesContent":["<script>\r\nimport { initializeApp, getApps } from 'firebase/compat/app';\r\nimport { getDatabase } from 'firebase/compat/database';\r\n\r\nexport default {\r\n  created() {\r\n    // Check if Firebase app is already initialized\r\n    if (!getApps().length) {\r\n      // If not initialized, initialize Firebase\r\n      const firebaseConfig = {\r\n        apiKey: \"YOUR_API_KEY\",\r\n        authDomain: \"YOUR_AUTH_DOMAIN\",\r\n        projectId: \"YOUR_PROJECT_ID\",\r\n        storageBucket: \"YOUR_STORAGE_BUCKET\",\r\n        messagingSenderId: \"YOUR_MESSAGING_SENDER_ID\",\r\n        appId: \"YOUR_APP_ID\",\r\n      };\r\n      initializeApp(firebaseConfig);\r\n    }\r\n\r\n    // Get Firebase database reference\r\n    const db = getDatabase();\r\n\r\n    // Your Firebase database reference\r\n    // Modify 'frostyOrders' to your actual database reference\r\n    const frostyOrdersRef = db.ref('frostyOrders');\r\n\r\n    // Listen for child_added events in the frostyOrders node\r\n    frostyOrdersRef.on('child_added', (childSnapshot) => {\r\n      const newItem = childSnapshot.val();\r\n\r\n      // Do something with the newItem (e.g., update state or trigger a function)\r\n      console.log(newItem);\r\n    });\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AACA,SAASA,aAAa,EAAEC,OAAM,QAAS,qBAAqB;AAC5D,SAASC,WAAU,QAAS,0BAA0B;AAEtD,eAAe;EACbC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACF,OAAO,CAAC,CAAC,CAACG,MAAM,EAAE;MACrB;MACA,MAAMC,cAAa,GAAI;QACrBC,MAAM,EAAE,cAAc;QACtBC,UAAU,EAAE,kBAAkB;QAC9BC,SAAS,EAAE,iBAAiB;QAC5BC,aAAa,EAAE,qBAAqB;QACpCC,iBAAiB,EAAE,0BAA0B;QAC7CC,KAAK,EAAE;MACT,CAAC;MACDX,aAAa,CAACK,cAAc,CAAC;IAC/B;;IAEA;IACA,MAAMO,EAAC,GAAIV,WAAW,CAAC,CAAC;;IAExB;IACA;IACA,MAAMW,eAAc,GAAID,EAAE,CAACE,GAAG,CAAC,cAAc,CAAC;;IAE9C;IACAD,eAAe,CAACE,EAAE,CAAC,aAAa,EAAGC,aAAa,IAAK;MACnD,MAAMC,OAAM,GAAID,aAAa,CAACE,GAAG,CAAC,CAAC;;MAEnC;MACAC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IACtB,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}