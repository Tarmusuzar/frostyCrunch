{"ast":null,"code":"export default {\n  data() {\n    return {\n      receiptNumber: \"\",\n      staffServed: \"\",\n      selectedBanana: \"\",\n      bananaFlavors: [\"Chocolate\", \"Strawberry\", \"Peanut Butter\", \"More...\"],\n      selectedIceCream: \"\",\n      iceCreamFlavors: [\"Vanilla\", \"Chocolate\", \"Coffee\", \"None\"],\n      customerServiceRating: 0,\n      foodQualityRating: 0,\n      ambienceRating: 0,\n      submittedMessage: false\n    };\n  },\n  methods: {\n    submitRating() {\n      // Gather all the rating data\n      const ratingData = {\n        receiptNumber: this.receiptNumber,\n        staffServed: this.staffServed,\n        orderedBanana: this.selectedBanana,\n        orderedIceCream: this.selectedIceCream,\n        customerServiceRating: this.customerServiceRating,\n        foodQualityRating: this.foodQualityRating,\n        ambienceRating: this.ambienceRating,\n        wouldRecommend: this.wouldRecommend // Assuming you've added a radio button for this\n      };\n\n      // Send the rating data to your server for processing\n      // (Replace this with your actual submission logic)\n      fetch('/api/ratings', {\n        method: 'POST',\n        body: JSON.stringify(ratingData),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.ok) {\n          this.submittedMessage = true;\n          this.resetForm(); // Clear the form after successful submission\n        } else {\n          // Handle errors\n        }\n      }).catch(error => {\n        // Handle network errors\n        console.log(error);\n      });\n    },\n    resetForm() {\n      // Reset all form fields to their initial values\n      this.receiptNumber = \"\";\n      this.staffServed = \"\";\n      // ...(reset other fields)\n      this.submittedMessage = false;\n    }\n  }\n};","map":{"version":3,"names":["data","receiptNumber","staffServed","selectedBanana","bananaFlavors","selectedIceCream","iceCreamFlavors","customerServiceRating","foodQualityRating","ambienceRating","submittedMessage","methods","submitRating","ratingData","orderedBanana","orderedIceCream","wouldRecommend","fetch","method","body","JSON","stringify","headers","then","response","ok","resetForm","catch","error","console","log"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frosty\\src\\components\\MainRuv.vue"],"sourcesContent":["<template>\r\n    <div class=\"rate-your-visit\">\r\n      <h2>Rate Your Frosty Crunch Experience!</h2>\r\n      <p>Your feedback helps us keep things frosty! Please share your thoughts.</p>\r\n  \r\n      <form @submit.prevent=\"submitRating\">\r\n        <div class=\"input-group\">\r\n          <label for=\"receipt-number\">Receipt Number:</label>\r\n          <input type=\"text\" id=\"receipt-number\" v-model=\"receiptNumber\" required>\r\n        </div>\r\n  \r\n        <div class=\"input-group\">\r\n          <label for=\"staff-served\">Staff Member Who Served You:</label>\r\n          <select id=\"staff-served\" v-model=\"staffServed\" required>\r\n            <option value=\"\">[Select a staff member]</option>\r\n            <option value=\"Sarah\">Sarah</option>\r\n            <option value=\"Alex\">Alex</option>\r\n            <option value=\"Emma\">Emma</option>\r\n            </select>\r\n        </div>\r\n  \r\n        <div class=\"order-section\">\r\n          <h3>Your Order:</h3>\r\n          <div class=\"order-item\">\r\n            <h4>Frozen Banana:</h4>\r\n            <ul>\r\n              <li v-for=\"option in bananaFlavors\" :key=\"option\" @click=\"selectedBanana = option\">\r\n                <button :class=\"{ active: selectedBanana === option }\">{{ option }}</button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"order-item\">\r\n            <h4>Ice Cream (Optional):</h4>\r\n            <ul>\r\n              <li v-for=\"option in iceCreamFlavors\" :key=\"option\" @click=\"selectedIceCream = option\">\r\n                <button :class=\"{ active: selectedIceCream === option }\">{{ option }}</button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"rating-group\">\r\n          <h3>Rate Your Experience:</h3>\r\n          <div class=\"rating-item\">\r\n            <label for=\"customer-service\">Customer Service:</label>\r\n            <div class=\"stars\">\r\n              <span v-for=\"n in 10\" :key=\"n\">\r\n                <button @click=\"customerServiceRating = n\">{{ n }}</button>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"rating-item\">\r\n            <label for=\"food-quality\">Food Quality:</label>\r\n            <div class=\"stars\">\r\n              <span v-for=\"n in 10\" :key=\"n\">\r\n                <button @click=\"foodQualityRating = n\">{{ n }}</button>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"rating-item\">\r\n            <label for=\"ambience\">Ambiance:</label>\r\n            <div class=\"stars\">\r\n              <span v-for=\"n in 10\" :key=\"n\">\r\n                <button @click=\"ambienceRating = n\">{{ n }}</button>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"recommendation-section\">\r\n          <h3>Would you recommend Frosty Crunch?</h3>\r\n          <div class=\"radio-buttons\">\r\n            <label for=\"recommend-yes\">Yes!</label>\r\n            <input type=\"radio\" id=\"recommend-yes\" name=\"recommend\" value=\"yes\" required>\r\n            <label for=\"recommend-no\">No</label>\r\n            <input type=\"radio\" id=\"recommend-no\" name=\"recommend\" value=\"no\" required>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"action-buttons\">\r\n          <button type=\"submit\">Submit Rating</button>\r\n          <button type=\"button\" @click=\"resetForm\">Reset</button>\r\n        </div>\r\n      </form>\r\n  \r\n      <p v-if=\"submittedMessage\">Thank you for your feedback!</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        receiptNumber: \"\",\r\n        staffServed: \"\",\r\n        selectedBanana: \"\",\r\n        bananaFlavors: [\"Chocolate\", \"Strawberry\", \"Peanut Butter\", \"More...\"],\r\n        selectedIceCream: \"\",\r\n        iceCreamFlavors: [\"Vanilla\", \"Chocolate\", \"Coffee\", \"None\"],\r\n        customerServiceRating: 0,\r\n        foodQualityRating: 0,\r\n        ambienceRating: 0,\r\n        submittedMessage: false,\r\n      };\r\n    },\r\n    methods: {\r\n    submitRating() {\r\n      // Gather all the rating data\r\n      const ratingData = {\r\n        receiptNumber: this.receiptNumber,\r\n        staffServed: this.staffServed,\r\n        orderedBanana: this.selectedBanana,\r\n        orderedIceCream: this.selectedIceCream,\r\n        customerServiceRating: this.customerServiceRating,\r\n        foodQualityRating: this.foodQualityRating,\r\n        ambienceRating: this.ambienceRating,\r\n        wouldRecommend: this.wouldRecommend, // Assuming you've added a radio button for this\r\n      };\r\n\r\n      // Send the rating data to your server for processing\r\n      // (Replace this with your actual submission logic)\r\n      fetch('/api/ratings', {\r\n        method: 'POST',\r\n        body: JSON.stringify(ratingData),\r\n        headers: { 'Content-Type': 'application/json' },\r\n      })\r\n        .then(response => {\r\n          if (response.ok) {\r\n            this.submittedMessage = true;\r\n            this.resetForm(); // Clear the form after successful submission\r\n          } else {\r\n            // Handle errors\r\n          }\r\n        })\r\n        .catch(error => {\r\n          // Handle network errors\r\n          console.log(error)\r\n        });\r\n    },\r\n    resetForm() {\r\n      // Reset all form fields to their initial values\r\n      this.receiptNumber = \"\";\r\n      this.staffServed = \"\";\r\n      // ...(reset other fields)\r\n      this.submittedMessage = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n    .rate-your-visit {\r\n  background-color: #fff; /* White background for cleanliness */\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  font-family: 'Roboto', sans-serif; /* McDonald's font */\r\n  color: #333;\r\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.15); /* Light shadow for depth */\r\n}\r\n\r\n/* Headings */\r\nh2, h3 {\r\n  font-weight: bold;\r\n  color: #e76a15; /* McDonald's red */\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n/* Input fields and labels */\r\n.input-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  font-weight: bold;\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput[type=\"text\"],\r\nselect {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n}\r\n\r\n/* Order section */\r\n.order-section {\r\n  border-top: 1px solid #ccc;\r\n  padding-top: 15px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.order-item {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.order-item h4 {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.order-item ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.order-item li button {\r\n  background-color: #fff;\r\n  border: 1px solid #ccc;\r\n  padding: 10px 15px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n}\r\n\r\n.order-item li button.active {\r\n  background-color: #e76a15;\r\n  color: #fff;\r\n}\r\n\r\n/* Rating section */\r\n.rating-group {\r\n  border-top: 1px solid #ccc;\r\n  padding-top: 15px;\r\n}\r\n\r\n.stars button {\r\n  background-color: #f2f2f2;\r\n  border: 1px solid #ccc;\r\n  padding: 10px 15px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.2s ease-in-out;\r\n}\r\n\r\n.stars button:hover {\r\n  background-color: #ddd;\r\n}\r\n\r\n.stars button.selected {\r\n  background-color: #e76a15;\r\n  color: #fff;\r\n}\r\n\r\n/* Recommendation section */\r\n.recommendation-section {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.radio-buttons {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\nlabel {\r\n  margin-bottom: 0;\r\n}\r\n\r\ninput[type=\"radio\"] {\r\n  margin-right: 5px;\r\n}\r\n\r\n/* Action buttons */\r\n.action-buttons {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\nbutton {\r\n  background-color: #e76a15;\r\n  color: #fff;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #c55a11;\r\n}\r\n\r\n/* Responsiveness */\r\n@media (max-width: 768px) {\r\n  /* Adjust spacing and font sizes for smaller screens */\r\n}\r\n\r\n</style>"],"mappings":"AA0FE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE;MACjBC,WAAW,EAAE,EAAE;MACfC,cAAc,EAAE,EAAE;MAClBC,aAAa,EAAE,CAAC,WAAW,EAAE,YAAY,EAAE,eAAe,EAAE,SAAS,CAAC;MACtEC,gBAAgB,EAAE,EAAE;MACpBC,eAAe,EAAE,CAAC,SAAS,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,CAAC;MAC3DC,qBAAqB,EAAE,CAAC;MACxBC,iBAAiB,EAAE,CAAC;MACpBC,cAAc,EAAE,CAAC;MACjBC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACTC,YAAYA,CAAA,EAAG;MACb;MACA,MAAMC,UAAS,GAAI;QACjBZ,aAAa,EAAE,IAAI,CAACA,aAAa;QACjCC,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BY,aAAa,EAAE,IAAI,CAACX,cAAc;QAClCY,eAAe,EAAE,IAAI,CAACV,gBAAgB;QACtCE,qBAAqB,EAAE,IAAI,CAACA,qBAAqB;QACjDC,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;QACzCC,cAAc,EAAE,IAAI,CAACA,cAAc;QACnCO,cAAc,EAAE,IAAI,CAACA,cAAc,CAAE;MACvC,CAAC;;MAED;MACA;MACAC,KAAK,CAAC,cAAc,EAAE;QACpBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,UAAU,CAAC;QAChCS,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAChD,CAAC,EACEC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACf,IAAI,CAACf,gBAAe,GAAI,IAAI;UAC5B,IAAI,CAACgB,SAAS,CAAC,CAAC,EAAE;QACpB,OAAO;UACL;QAAA;MAEJ,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACd;QACAC,OAAO,CAACC,GAAG,CAACF,KAAK;MACnB,CAAC,CAAC;IACN,CAAC;IACDF,SAASA,CAAA,EAAG;MACV;MACA,IAAI,CAACzB,aAAY,GAAI,EAAE;MACvB,IAAI,CAACC,WAAU,GAAI,EAAE;MACrB;MACA,IAAI,CAACQ,gBAAe,GAAI,KAAK;IAC/B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}