{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      reviews: [],\n      flavors: [\"Milk Chocolate\", \"Dark Chocolate\", \"White Chocolate\", \"Peanut Butter\", \"Salted Caramel\"],\n      serviceTotal: 0\n    };\n  },\n  methods: {\n    getVoteCount(item) {\n      const flavorReviews = this.reviews.filter(review => review.flavor === item);\n      return flavorReviews.length;\n    },\n    getAverageFoodQuality(flavor) {\n      const flavorReviews = this.reviews.filter(review => review.flavor === flavor);\n      const totalFoodQuality = flavorReviews.reduce((acc, review) => acc + review.foodQuality, 0);\n      return flavorReviews.length === 0 ? 0 : totalFoodQuality / flavorReviews.length;\n    },\n    getPercentage(flavor) {\n      return this.getAverageFoodQuality(flavor) * 10; // Convert to percentage\n    },\n    getBarColor(flavor) {\n      const averageFoodQuality = this.getAverageFoodQuality(flavor);\n      if (averageFoodQuality < 5) {\n        return 'red';\n      } else if (averageFoodQuality >= 5 && averageFoodQuality <= 7) {\n        return 'orange';\n      } else {\n        return 'green';\n      }\n    },\n    getServiceBarColor() {\n      if (this.serviceTotal < 5) {\n        return 'red';\n      } else if (this.serviceTotal >= 5 && this.serviceTotal <= 7) {\n        return 'orange';\n      } else {\n        return 'green';\n      }\n    }\n  },\n  beforeCreate() {\n    fetch('https://my-vue-app-8da88-default-rtdb.firebaseio.com/ruv.json').then(data => {\n      if (data.ok) {\n        return data.json();\n      }\n    }).then(info => {\n      let arr = [];\n      arr.push(info);\n      arr.forEach(item => {\n        Object.values(item).forEach(item => {\n          this.reviews.push(item);\n          this.serviceTotal = this.reviews.reduce((accumulator, currentValue) => accumulator + currentValue.service, 0);\n        });\n      });\n    });\n  }\n};","map":{"version":3,"names":["data","reviews","flavors","serviceTotal","methods","getVoteCount","item","flavorReviews","filter","review","flavor","length","getAverageFoodQuality","totalFoodQuality","reduce","acc","foodQuality","getPercentage","getBarColor","averageFoodQuality","getServiceBarColor","beforeCreate","fetch","then","ok","json","info","arr","push","forEach","Object","values","accumulator","currentValue","service"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frostycrunch\\src\\components\\MainReviews.vue"],"sourcesContent":["<template>\r\n  <div class=\"flavor-votes-container\">\r\n    <h1 class=\"title\">Customer Feedback</h1>\r\n    <div class=\"flavor-chart\">\r\n      <div v-for=\"flavor in flavors\" :key=\"flavor\" class=\"flavor-bar\">\r\n        <p class=\"flavor-label\">{{ flavor }}</p>\r\n        <div class=\"bar\" :style=\"{ width: getPercentage(flavor) + '%', backgroundColor: getBarColor(flavor) }\"></div>\r\n        <p class=\"vote-count\">{{ getVoteCount(flavor) }} votes</p>\r\n      </div>\r\n      <div class=\"flavor-bar\">\r\n        <p class=\"flavor-label\">Customer Service</p>\r\n        <div class=\"bar\" :style=\"{ width: getPercentage(serviceTotal) + '%', backgroundColor: getServiceBarColor() }\"></div>\r\n        <p class=\"vote-count\">{{ getVoteCount(serviceTotal) }} votes</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      reviews: [],\r\n      flavors: [\"Milk Chocolate\", \"Dark Chocolate\", \"White Chocolate\", \"Peanut Butter\", \"Salted Caramel\"],\r\n      serviceTotal: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    getVoteCount(item) {\r\n      const flavorReviews = this.reviews.filter((review) => review.flavor === item);\r\n      return flavorReviews.length;\r\n    },\r\n    getAverageFoodQuality(flavor) {\r\n      const flavorReviews = this.reviews.filter((review) => review.flavor === flavor);\r\n      const totalFoodQuality = flavorReviews.reduce((acc, review) => acc + review.foodQuality, 0);\r\n      return flavorReviews.length === 0 ? 0 : totalFoodQuality / flavorReviews.length;\r\n    },\r\n    getPercentage(flavor) {\r\n      return this.getAverageFoodQuality(flavor) * 10; // Convert to percentage\r\n    },\r\n    getBarColor(flavor) {\r\n      const averageFoodQuality = this.getAverageFoodQuality(flavor);\r\n      if (averageFoodQuality < 5) {\r\n        return 'red';\r\n      } else if (averageFoodQuality >= 5 && averageFoodQuality <= 7) {\r\n        return 'orange';\r\n      } else {\r\n        return 'green';\r\n      }\r\n    },\r\n    getServiceBarColor() {\r\n      if (this.serviceTotal < 5) {\r\n        return 'red';\r\n      } else if (this.serviceTotal >= 5 && this.serviceTotal <= 7) {\r\n        return 'orange';\r\n      } else {\r\n        return 'green';\r\n      }\r\n    },\r\n  },\r\n  beforeCreate() {\r\n    fetch('https://my-vue-app-8da88-default-rtdb.firebaseio.com/ruv.json')\r\n      .then((data) => {\r\n        if (data.ok) {\r\n          return data.json();\r\n        }\r\n      })\r\n      .then((info) => {\r\n        let arr = [];\r\n        arr.push(info);\r\n        arr.forEach((item) => {\r\n          Object.values(item).forEach((item) => {\r\n            this.reviews.push(item);\r\n            this.serviceTotal = this.reviews.reduce((accumulator, currentValue) => accumulator + currentValue.service, 0);\r\n          });\r\n        });\r\n      });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.flavor-votes-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 600px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  color: #333;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.flavor-chart {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.flavor-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 10px 0;\r\n}\r\n\r\n.flavor-label {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n.bar {\r\n  flex: 5;\r\n  height: 20px;\r\n  background-color: #3498db; /* Blue color for the bars */\r\n}\r\n\r\n.vote-count {\r\n  flex: 1;\r\n  margin-left: 10px;\r\n  text-align: right;\r\n  color: #333;\r\n}\r\n</style>\r\n"],"mappings":";AAmBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,eAAe,EAAE,gBAAgB,CAAC;MACnGC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,IAAI,EAAE;MACjB,MAAMC,aAAY,GAAI,IAAI,CAACN,OAAO,CAACO,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,MAAK,KAAMJ,IAAI,CAAC;MAC7E,OAAOC,aAAa,CAACI,MAAM;IAC7B,CAAC;IACDC,qBAAqBA,CAACF,MAAM,EAAE;MAC5B,MAAMH,aAAY,GAAI,IAAI,CAACN,OAAO,CAACO,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,MAAK,KAAMA,MAAM,CAAC;MAC/E,MAAMG,gBAAe,GAAIN,aAAa,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEN,MAAM,KAAKM,GAAE,GAAIN,MAAM,CAACO,WAAW,EAAE,CAAC,CAAC;MAC3F,OAAOT,aAAa,CAACI,MAAK,KAAM,IAAI,IAAIE,gBAAe,GAAIN,aAAa,CAACI,MAAM;IACjF,CAAC;IACDM,aAAaA,CAACP,MAAM,EAAE;MACpB,OAAO,IAAI,CAACE,qBAAqB,CAACF,MAAM,IAAI,EAAE,EAAE;IAClD,CAAC;IACDQ,WAAWA,CAACR,MAAM,EAAE;MAClB,MAAMS,kBAAiB,GAAI,IAAI,CAACP,qBAAqB,CAACF,MAAM,CAAC;MAC7D,IAAIS,kBAAiB,GAAI,CAAC,EAAE;QAC1B,OAAO,KAAK;MACd,OAAO,IAAIA,kBAAiB,IAAK,KAAKA,kBAAiB,IAAK,CAAC,EAAE;QAC7D,OAAO,QAAQ;MACjB,OAAO;QACL,OAAO,OAAO;MAChB;IACF,CAAC;IACDC,kBAAkBA,CAAA,EAAG;MACnB,IAAI,IAAI,CAACjB,YAAW,GAAI,CAAC,EAAE;QACzB,OAAO,KAAK;MACd,OAAO,IAAI,IAAI,CAACA,YAAW,IAAK,KAAK,IAAI,CAACA,YAAW,IAAK,CAAC,EAAE;QAC3D,OAAO,QAAQ;MACjB,OAAO;QACL,OAAO,OAAO;MAChB;IACF;EACF,CAAC;EACDkB,YAAYA,CAAA,EAAG;IACbC,KAAK,CAAC,+DAA+D,EAClEC,IAAI,CAAEvB,IAAI,IAAK;MACd,IAAIA,IAAI,CAACwB,EAAE,EAAE;QACX,OAAOxB,IAAI,CAACyB,IAAI,CAAC,CAAC;MACpB;IACF,CAAC,EACAF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIC,GAAE,GAAI,EAAE;MACZA,GAAG,CAACC,IAAI,CAACF,IAAI,CAAC;MACdC,GAAG,CAACE,OAAO,CAAEvB,IAAI,IAAK;QACpBwB,MAAM,CAACC,MAAM,CAACzB,IAAI,CAAC,CAACuB,OAAO,CAAEvB,IAAI,IAAK;UACpC,IAAI,CAACL,OAAO,CAAC2B,IAAI,CAACtB,IAAI,CAAC;UACvB,IAAI,CAACH,YAAW,GAAI,IAAI,CAACF,OAAO,CAACa,MAAM,CAAC,CAACkB,WAAW,EAAEC,YAAY,KAAKD,WAAU,GAAIC,YAAY,CAACC,OAAO,EAAE,CAAC,CAAC;QAC/G,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}