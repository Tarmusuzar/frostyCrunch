{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      reviews: [],\n      flavors: [\"Milk Chocolate\", \"Dark Chocolate\", \"White Chocolate\", \"Peanut Butter\", \"Salted Caramel\"],\n      service: [],\n      serviceTotal: 0\n    };\n  },\n  methods: {\n    getVoteCount(flavor) {\n      const flavorReviews = this.reviews.filter(review => review.flavor === flavor);\n      return flavorReviews.length;\n    },\n    getAverageFoodQuality(flavor) {\n      const flavorReviews = this.reviews.filter(review => review.flavor === flavor);\n      const totalFoodQuality = flavorReviews.reduce((acc, review) => acc + review.foodQuality, 0);\n      return flavorReviews.length === 0 ? 0 : totalFoodQuality / flavorReviews.length;\n    },\n    getPercentage(flavor) {\n      return this.getAverageFoodQuality(flavor) * 10; // Convert to percentage\n    },\n    getBarColor(flavor) {\n      const averageFoodQuality = this.getAverageFoodQuality(flavor);\n      if (averageFoodQuality < 5) {\n        return 'red';\n      } else if (averageFoodQuality >= 5 && averageFoodQuality <= 7) {\n        return 'orange';\n      } else {\n        return 'green';\n      }\n    }\n  },\n  beforeCreate() {\n    fetch('https://my-vue-app-8da88-default-rtdb.firebaseio.com/ruv.json').then(data => {\n      if (data.ok) {\n        return data.json();\n      }\n    }).then(info => {\n      let arr = [];\n      arr.push(info);\n      arr.forEach(item => {\n        Object.values(item).forEach(item => {\n          this.reviews.push(item);\n          this.service.push(item.service);\n          this.serviceTotal = this.service.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n        });\n      });\n    });\n  }\n};","map":{"version":3,"names":["data","reviews","flavors","service","serviceTotal","methods","getVoteCount","flavor","flavorReviews","filter","review","length","getAverageFoodQuality","totalFoodQuality","reduce","acc","foodQuality","getPercentage","getBarColor","averageFoodQuality","beforeCreate","fetch","then","ok","json","info","arr","push","forEach","item","Object","values","accumulator","currentValue"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frostycrunch\\src\\components\\MainReviews.vue"],"sourcesContent":["<template>\r\n    <div class=\"flavor-votes-container\">\r\n      <h1 class=\"title\">Customer Feedback</h1>\r\n        <p>{{ service }}</p>\r\n      <div class=\"flavor-chart\">\r\n        <div v-for=\"flavor in flavors\" :key=\"flavor\" class=\"flavor-bar\">\r\n          <p class=\"flavor-label\">{{ flavor }}</p>\r\n          <div class=\"bar\" :style=\"{ width: getPercentage(flavor) + '%', backgroundColor: getBarColor(flavor) }\"></div>\r\n          <p class=\"vote-count\">{{ getVoteCount(flavor) }} votes</p>\r\n        </div>\r\n        <div class=\"flavor-bar\">\r\n          <p class=\"flavor-label\">Customer Service</p>\r\n          <div class=\"bar\" :style=\"{ width: getPercentage(serviceTotal) + '%', backgroundColor: getBarColor(flavor) }\"></div>\r\n          <p class=\"vote-count\">{{ getVoteCount(serviceTotal) }} votes</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n<script>  \r\nexport default{\r\n    \r\n    data(){\r\n        return{\r\n            reviews:[],\r\n            flavors: [\"Milk Chocolate\", \"Dark Chocolate\", \"White Chocolate\", \"Peanut Butter\", \"Salted Caramel\"],\r\n            service:[],\r\n            serviceTotal:0\r\n        }\r\n    },\r\n    methods: {\r\n    getVoteCount(flavor) {\r\n      const flavorReviews = this.reviews.filter((review) => review.flavor === flavor);\r\n      return flavorReviews.length;\r\n    },\r\n    getAverageFoodQuality(flavor) {\r\n      const flavorReviews = this.reviews.filter((review) => review.flavor === flavor);\r\n      const totalFoodQuality = flavorReviews.reduce((acc, review) => acc + review.foodQuality, 0);\r\n      return flavorReviews.length === 0 ? 0 : totalFoodQuality / flavorReviews.length;\r\n    },\r\n    getPercentage(flavor) {\r\n      return this.getAverageFoodQuality(flavor) * 10; // Convert to percentage\r\n    },\r\n    getBarColor(flavor) {\r\n      const averageFoodQuality = this.getAverageFoodQuality(flavor);\r\n      if (averageFoodQuality < 5) {\r\n        return 'red';\r\n      } else if (averageFoodQuality >= 5 && averageFoodQuality <= 7) {\r\n        return 'orange';\r\n      } else {\r\n        return 'green';\r\n      }\r\n    },\r\n  },\r\n    beforeCreate(){\r\n    fetch('https://my-vue-app-8da88-default-rtdb.firebaseio.com/ruv.json').then(data=>{\r\n      if(data.ok){\r\n        return data.json()\r\n      }\r\n    }).then(info=>{\r\n      let arr = []\r\n      arr.push(info)\r\n      arr.forEach(item=>{\r\n        \r\n        Object.values(item).forEach(item => {\r\n    this.reviews.push(item)\r\n    this.service.push(item.service) \r\n    this.serviceTotal= this.service.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\r\n\r\n  });\r\n            \r\n\r\n        \r\n      })\r\n        \r\n    })\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.flavor-votes-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 600px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  color: #333;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.flavor-chart {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.flavor-bar {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 10px 0;\r\n}\r\n\r\n.flavor-label {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n.bar {\r\n  flex: 5;\r\n  height: 20px;\r\n  background-color: #3498db; /* Blue color for the bars */\r\n}\r\n\r\n.vote-count {\r\n  flex: 1;\r\n  margin-left: 10px;\r\n  text-align: right;\r\n  color: #333;\r\n}\r\n</style>"],"mappings":";AAmBA,eAAc;EAEVA,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,OAAO,EAAC,EAAE;MACVC,OAAO,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,eAAe,EAAE,gBAAgB,CAAC;MACnGC,OAAO,EAAC,EAAE;MACVC,YAAY,EAAC;IACjB;EACJ,CAAC;EACDC,OAAO,EAAE;IACTC,YAAYA,CAACC,MAAM,EAAE;MACnB,MAAMC,aAAY,GAAI,IAAI,CAACP,OAAO,CAACQ,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACH,MAAK,KAAMA,MAAM,CAAC;MAC/E,OAAOC,aAAa,CAACG,MAAM;IAC7B,CAAC;IACDC,qBAAqBA,CAACL,MAAM,EAAE;MAC5B,MAAMC,aAAY,GAAI,IAAI,CAACP,OAAO,CAACQ,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACH,MAAK,KAAMA,MAAM,CAAC;MAC/E,MAAMM,gBAAe,GAAIL,aAAa,CAACM,MAAM,CAAC,CAACC,GAAG,EAAEL,MAAM,KAAKK,GAAE,GAAIL,MAAM,CAACM,WAAW,EAAE,CAAC,CAAC;MAC3F,OAAOR,aAAa,CAACG,MAAK,KAAM,IAAI,IAAIE,gBAAe,GAAIL,aAAa,CAACG,MAAM;IACjF,CAAC;IACDM,aAAaA,CAACV,MAAM,EAAE;MACpB,OAAO,IAAI,CAACK,qBAAqB,CAACL,MAAM,IAAI,EAAE,EAAE;IAClD,CAAC;IACDW,WAAWA,CAACX,MAAM,EAAE;MAClB,MAAMY,kBAAiB,GAAI,IAAI,CAACP,qBAAqB,CAACL,MAAM,CAAC;MAC7D,IAAIY,kBAAiB,GAAI,CAAC,EAAE;QAC1B,OAAO,KAAK;MACd,OAAO,IAAIA,kBAAiB,IAAK,KAAKA,kBAAiB,IAAK,CAAC,EAAE;QAC7D,OAAO,QAAQ;MACjB,OAAO;QACL,OAAO,OAAO;MAChB;IACF;EACF,CAAC;EACCC,YAAYA,CAAA,EAAE;IACdC,KAAK,CAAC,+DAA+D,CAAC,CAACC,IAAI,CAACtB,IAAI,IAAE;MAChF,IAAGA,IAAI,CAACuB,EAAE,EAAC;QACT,OAAOvB,IAAI,CAACwB,IAAI,CAAC;MACnB;IACF,CAAC,CAAC,CAACF,IAAI,CAACG,IAAI,IAAE;MACZ,IAAIC,GAAE,GAAI,EAAC;MACXA,GAAG,CAACC,IAAI,CAACF,IAAI;MACbC,GAAG,CAACE,OAAO,CAACC,IAAI,IAAE;QAEhBC,MAAM,CAACC,MAAM,CAACF,IAAI,CAAC,CAACD,OAAO,CAACC,IAAG,IAAK;UACxC,IAAI,CAAC5B,OAAO,CAAC0B,IAAI,CAACE,IAAI;UACtB,IAAI,CAAC1B,OAAO,CAACwB,IAAI,CAACE,IAAI,CAAC1B,OAAO;UAC9B,IAAI,CAACC,YAAY,GAAE,IAAI,CAACD,OAAO,CAACW,MAAM,CAAC,CAACkB,WAAW,EAAEC,YAAY,KAAKD,WAAU,GAAIC,YAAY,EAAE,CAAC,CAAC;QAEtG,CAAC,CAAC;MAIE,CAAC;IAEH,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}