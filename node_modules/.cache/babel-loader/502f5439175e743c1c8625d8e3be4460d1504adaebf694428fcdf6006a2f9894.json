{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      products: [{\n        id: 1,\n        name: 'Product A',\n        price: 50\n      }, {\n        id: 2,\n        name: 'Product B',\n        price: 30\n      }, {\n        id: 3,\n        name: 'Product C',\n        price: 40\n      }],\n      selectedProduct: null,\n      quantity: 1,\n      totalAmount: 0,\n      order: []\n    };\n  },\n  computed: {\n    totalOrderAmount() {\n      return this.order.reduce((total, item) => total + item.total, 0);\n    }\n  },\n  methods: {\n    updateQuantity() {\n      this.quantity = 1; // Reset quantity when changing the selected product\n      this.updateTotal();\n    },\n    updateTotal() {\n      const selectedProduct = this.products.find(product => product.id === parseInt(this.selectedProduct));\n      this.totalAmount = selectedProduct ? selectedProduct.price * this.quantity : 0;\n    },\n    addToOrder() {\n      const selectedProduct = this.products.find(product => product.id === parseInt(this.selectedProduct));\n      if (selectedProduct) {\n        const orderItem = {\n          product: selectedProduct,\n          quantity: this.quantity,\n          total: this.totalAmount\n        };\n        this.order.push(orderItem);\n        this.clearForm();\n      }\n    },\n    clearForm() {\n      this.selectedProduct = null;\n      this.quantity = 1;\n      this.totalAmount = 0;\n    }\n  }\n};","map":{"version":3,"names":["data","products","id","name","price","selectedProduct","quantity","totalAmount","order","computed","totalOrderAmount","reduce","total","item","methods","updateQuantity","updateTotal","find","product","parseInt","addToOrder","orderItem","push","clearForm"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frosty\\src\\components\\Admin\\PlaceOrder.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>New Order</h2>\r\n  \r\n      <!-- Product selection -->\r\n      <label for=\"product\">Select Product:</label>\r\n      <select v-model=\"selectedProduct\" @change=\"updateQuantity\">\r\n        <option v-for=\"product in products\" :key=\"product.id\" :value=\"product.id\">\r\n          {{ product.name }} - {{ product.price }} AED\r\n        </option>\r\n      </select>\r\n  \r\n      <!-- Quantity input -->\r\n      <label for=\"quantity\">Quantity:</label>\r\n      <input type=\"number\" v-model=\"quantity\" min=\"1\" @input=\"updateTotal\" />\r\n  \r\n      <!-- Total amount -->\r\n      <p>Total Amount: {{ totalAmount }} AED</p>\r\n  \r\n      <!-- Add to order button -->\r\n      <button @click=\"addToOrder\">Add to Order</button>\r\n  \r\n      <!-- Display order summary -->\r\n      <div v-if=\"order.length > 0\">\r\n        <h3>Order Summary:</h3>\r\n        <ul>\r\n          <li v-for=\"(item, index) in order\" :key=\"index\">\r\n            {{ item.product.name }} - Quantity: {{ item.quantity }} - Total: {{ item.total }} AED\r\n          </li>\r\n        </ul>\r\n  \r\n        <p>Total Order Amount: {{ totalOrderAmount }} AED</p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        products: [\r\n          { id: 1, name: 'Product A', price: 50 },\r\n          { id: 2, name: 'Product B', price: 30 },\r\n          { id: 3, name: 'Product C', price: 40 },\r\n        ],\r\n        selectedProduct: null,\r\n        quantity: 1,\r\n        totalAmount: 0,\r\n        order: [],\r\n      };\r\n    },\r\n    computed: {\r\n      totalOrderAmount() {\r\n        return this.order.reduce((total, item) => total + item.total, 0);\r\n      },\r\n    },\r\n    methods: {\r\n      updateQuantity() {\r\n        this.quantity = 1; // Reset quantity when changing the selected product\r\n        this.updateTotal();\r\n      },\r\n      updateTotal() {\r\n        const selectedProduct = this.products.find((product) => product.id === parseInt(this.selectedProduct));\r\n        this.totalAmount = selectedProduct ? selectedProduct.price * this.quantity : 0;\r\n      },\r\n      addToOrder() {\r\n        const selectedProduct = this.products.find((product) => product.id === parseInt(this.selectedProduct));\r\n  \r\n        if (selectedProduct) {\r\n          const orderItem = {\r\n            product: selectedProduct,\r\n            quantity: this.quantity,\r\n            total: this.totalAmount,\r\n          };\r\n  \r\n          this.order.push(orderItem);\r\n          this.clearForm();\r\n        }\r\n      },\r\n      clearForm() {\r\n        this.selectedProduct = null;\r\n        this.quantity = 1;\r\n        this.totalAmount = 0;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  /* Add any additional styling here if needed */\r\n  </style>\r\n  "],"mappings":";AAqCE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CACR;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,WAAW;QAAEC,KAAK,EAAE;MAAG,CAAC,EACvC;QAAEF,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,WAAW;QAAEC,KAAK,EAAE;MAAG,CAAC,EACvC;QAAEF,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,WAAW;QAAEC,KAAK,EAAE;MAAG,CAAC,CACxC;MACDC,eAAe,EAAE,IAAI;MACrBC,QAAQ,EAAE,CAAC;MACXC,WAAW,EAAE,CAAC;MACdC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACF,KAAK,CAACG,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACD,KAAK,EAAE,CAAC,CAAC;IAClE;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACT,QAAO,GAAI,CAAC,EAAE;MACnB,IAAI,CAACU,WAAW,CAAC,CAAC;IACpB,CAAC;IACDA,WAAWA,CAAA,EAAG;MACZ,MAAMX,eAAc,GAAI,IAAI,CAACJ,QAAQ,CAACgB,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAAChB,EAAC,KAAMiB,QAAQ,CAAC,IAAI,CAACd,eAAe,CAAC,CAAC;MACtG,IAAI,CAACE,WAAU,GAAIF,eAAc,GAAIA,eAAe,CAACD,KAAI,GAAI,IAAI,CAACE,QAAO,GAAI,CAAC;IAChF,CAAC;IACDc,UAAUA,CAAA,EAAG;MACX,MAAMf,eAAc,GAAI,IAAI,CAACJ,QAAQ,CAACgB,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAAChB,EAAC,KAAMiB,QAAQ,CAAC,IAAI,CAACd,eAAe,CAAC,CAAC;MAEtG,IAAIA,eAAe,EAAE;QACnB,MAAMgB,SAAQ,GAAI;UAChBH,OAAO,EAAEb,eAAe;UACxBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBM,KAAK,EAAE,IAAI,CAACL;QACd,CAAC;QAED,IAAI,CAACC,KAAK,CAACc,IAAI,CAACD,SAAS,CAAC;QAC1B,IAAI,CAACE,SAAS,CAAC,CAAC;MAClB;IACF,CAAC;IACDA,SAASA,CAAA,EAAG;MACV,IAAI,CAAClB,eAAc,GAAI,IAAI;MAC3B,IAAI,CAACC,QAAO,GAAI,CAAC;MACjB,IAAI,CAACC,WAAU,GAAI,CAAC;IACtB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}