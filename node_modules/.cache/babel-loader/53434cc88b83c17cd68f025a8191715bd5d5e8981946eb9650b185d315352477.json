{"ast":null,"code":"export default {\n  created() {\n    this.loading = true;\n  },\n  mounted() {\n    window.addEventListener('load', this.handleLoad);\n  },\n  data() {\n    return {\n      loading: false // Set to true by default, you can change it based on your loading logic\n    };\n  },\n  methods: {\n    handleLoad() {\n      // This function will be called after all resources, including images, are loaded\n      // You can perform additional actions here\n      this.loading = false;\n    }\n  }\n  // You can use lifecycle hooks like created or mounted to handle loading logic\n  // For example, you can set isLoading to false after data is loaded\n  // created() {\n  //   fetchData().then(() => {\n  //     this.isLoading = false;\n  //   });\n  // }\n};","map":{"version":3,"names":["created","loading","mounted","window","addEventListener","handleLoad","data","methods"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frostycrunch\\src\\components\\Reusables\\MainLoading.vue"],"sourcesContent":["<template>\r\n    <div class=\"loading-overlay\" v-if=\"loading\">\r\n      <div class=\"loading-spinner\"></div>\r\n    </div>\r\n  </template>\r\n  \r\n  <style scoped>\r\n  .loading-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(255, 255, 255, 0.8); /* Light white overlay */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 9999; /* Higher than other elements */\r\n  }\r\n  \r\n  .loading-spinner {\r\n    border: 4px solid rgba(0, 0, 0, 0.1); /* Light border */\r\n    border-top: 4px solid #ffcc29; /* McDonald's Yellow */\r\n    border-radius: 50%;\r\n    width: 40px;\r\n    height: 40px;\r\n    animation: spin 1s linear infinite;\r\n  }\r\n  \r\n  @keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n  }\r\n  </style>\r\n  \r\n  <script>\r\n  export default {\r\n    created(){\r\n    this.loading = true\r\n\r\n   },\r\n    mounted() {\r\n  window.addEventListener('load', this.handleLoad);\r\n    },\r\n    data() {\r\n      return {\r\n        loading: false, // Set to true by default, you can change it based on your loading logic\r\n      };\r\n    },\r\n    methods:{\r\n      handleLoad() {\r\n    // This function will be called after all resources, including images, are loaded\r\n    // You can perform additional actions here\r\n    this.loading = false\r\n  },\r\n    }\r\n    // You can use lifecycle hooks like created or mounted to handle loading logic\r\n    // For example, you can set isLoading to false after data is loaded\r\n    // created() {\r\n    //   fetchData().then(() => {\r\n    //     this.isLoading = false;\r\n    //   });\r\n    // }\r\n  };\r\n  </script>\r\n  "],"mappings":"AAoCE,eAAe;EACbA,OAAOA,CAAA,EAAE;IACT,IAAI,CAACC,OAAM,GAAI,IAAG;EAEnB,CAAC;EACAC,OAAOA,CAAA,EAAG;IACZC,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAACC,UAAU,CAAC;EAC9C,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLL,OAAO,EAAE,KAAK,CAAE;IAClB,CAAC;EACH,CAAC;EACDM,OAAO,EAAC;IACNF,UAAUA,CAAA,EAAG;MACf;MACA;MACA,IAAI,CAACJ,OAAM,GAAI,KAAI;IACrB;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}