{"ast":null,"code":"export default {\n  data() {\n    return {\n      receiptNumber: \"\",\n      staffServed: \"\",\n      selectedBanana: \"\",\n      bananaFlavors: [\"Chocolate\", \"Strawberry\", \"Peanut Butter\", \"More...\"],\n      selectedIceCream: \"\",\n      iceCreamFlavors: [\"Vanilla\", \"Chocolate\", \"Coffee\", \"None\"],\n      customerServiceRating: 0,\n      foodQualityRating: 0,\n      ambienceRating: 0,\n      wouldRecommend: null,\n      submittedMessage: false,\n      step: 1\n    };\n  },\n  methods: {\n    submitRating() {\n      // Gather all the rating data\n      const ratingData = {\n        receiptNumber: this.receiptNumber,\n        staffServed: this.staffServed,\n        orderedBanana: this.selectedBanana,\n        orderedIceCream: this.selectedIceCream,\n        customerServiceRating: this.customerServiceRating,\n        foodQualityRating: this.foodQualityRating,\n        ambienceRating: this.ambienceRating,\n        wouldRecommend: this.wouldRecommend\n      };\n\n      // Send the rating data to your server for processing\n      // (Replace this with your actual submission logic)\n      fetch('/api/ratings', {\n        method: 'POST',\n        body: JSON.stringify(ratingData),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.ok) {\n          this.submittedMessage = true;\n          this.resetForm(); // Clear the form after successful submission\n        } else {\n          // Handle errors\n        }\n      }).catch(error => {\n        // Handle network errors\n        console.log(error);\n      });\n    },\n    resetForm() {\n      // Reset all form fields to their initial values\n      this.receiptNumber = \"\";\n      this.staffServed = \"\";\n      this.selectedBanana = \"\";\n      this.selectedIceCream = \"\";\n      this.customerServiceRating = 0;\n      this.foodQualityRating = 0;\n      this.ambienceRating = 0;\n      this.wouldRecommend = null;\n      this.submittedMessage = false;\n      this.step = 1;\n    },\n    nextStep() {\n      this.step += 1;\n    },\n    prevStep() {\n      this.step -= 1;\n    },\n    selectOption(property, option) {\n      this[property] = option;\n      this.nextStep();\n    }\n  }\n};","map":{"version":3,"names":["data","receiptNumber","staffServed","selectedBanana","bananaFlavors","selectedIceCream","iceCreamFlavors","customerServiceRating","foodQualityRating","ambienceRating","wouldRecommend","submittedMessage","step","methods","submitRating","ratingData","orderedBanana","orderedIceCream","fetch","method","body","JSON","stringify","headers","then","response","ok","resetForm","catch","error","console","log","nextStep","prevStep","selectOption","property","option"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frosty\\src\\components\\MainRuv.vue"],"sourcesContent":["<template>\r\n  <div class=\"rate-your-visit\">\r\n    <h2>Rate Your Frosty Crunch Experience!</h2>\r\n    <p>Your feedback helps us keep things frosty! Please share your thoughts.</p>\r\n\r\n    <form @submit.prevent=\"submitRating\" v-if=\"!submittedMessage\">\r\n      <div v-if=\"step === 1\" class=\"input-group\">\r\n        <label for=\"receipt-number\">Receipt Number:</label>\r\n        <input type=\"text\" id=\"receipt-number\" v-model=\"receiptNumber\" required>\r\n        <button @click=\"nextStep\">Next</button>\r\n      </div>\r\n\r\n      <div v-if=\"step === 2\" class=\"input-group\">\r\n        <label for=\"staff-served\">Staff Member Who Served You:</label>\r\n        <select id=\"staff-served\" v-model=\"staffServed\" required>\r\n          <option value=\"\">[Select a staff member]</option>\r\n          <option value=\"Sarah\">Sarah</option>\r\n          <option value=\"Alex\">Alex</option>\r\n          <option value=\"Emma\">Emma</option>\r\n        </select>\r\n        <button @click=\"nextStep\">Next</button>\r\n      </div>\r\n\r\n      <div v-if=\"step === 3\" class=\"order-section\">\r\n        <h3>Your Order:</h3>\r\n        <div class=\"order-item\">\r\n          <h4>Frozen Banana:</h4>\r\n          <ul>\r\n            <li v-for=\"option in bananaFlavors\" :key=\"option\" @click=\"selectOption('selectedBanana', option)\">\r\n              <button :class=\"{ active: selectedBanana === option }\">{{ option }}</button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <button @click=\"nextStep\">Next</button>\r\n      </div>\r\n\r\n      <div v-if=\"step === 4\" class=\"order-section\">\r\n        <h3>Ice Cream (Optional):</h3>\r\n        <div class=\"order-item\">\r\n          <h4>Ice Cream:</h4>\r\n          <ul>\r\n            <li v-for=\"option in iceCreamFlavors\" :key=\"option\" @click=\"selectOption('selectedIceCream', option)\">\r\n              <button :class=\"{ active: selectedIceCream === option }\">{{ option }}</button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <button @click=\"nextStep\">Next</button>\r\n      </div>\r\n\r\n      <div v-if=\"step === 5\" class=\"rating-group\">\r\n        <h3>Rate Your Experience:</h3>\r\n        <div class=\"rating-item\">\r\n          <label for=\"customer-service\">Customer Service:</label>\r\n          <div class=\"stars\">\r\n            <span v-for=\"n in 10\" :key=\"n\">\r\n              <button @click=\"customerServiceRating = n\" :class=\"{ active: customerServiceRating === n }\">{{ n }}</button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <button @click=\"nextStep\">Next</button>\r\n      </div>\r\n\r\n      <div v-if=\"step === 6\" class=\"rating-group\">\r\n        <h3>Rate Your Experience:</h3>\r\n        <div class=\"rating-item\">\r\n          <label for=\"food-quality\">Food Quality:</label>\r\n          <div class=\"stars\">\r\n            <span v-for=\"n in 10\" :key=\"n\">\r\n              <button @click=\"foodQualityRating = n\" :class=\"{ active: foodQualityRating === n }\">{{ n }}</button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <button @click=\"nextStep\">Next</button>\r\n      </div>\r\n\r\n      <div v-if=\"step === 7\" class=\"rating-group\">\r\n        <h3>Rate Your Experience:</h3>\r\n        <div class=\"rating-item\">\r\n          <label for=\"ambience\">Ambiance:</label>\r\n          <div class=\"stars\">\r\n            <span v-for=\"n in 10\" :key=\"n\">\r\n              <button @click=\"ambienceRating = n\" :class=\"{ active: ambienceRating === n }\">{{ n }}</button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <button @click=\"nextStep\">Next</button>\r\n      </div>\r\n\r\n      <div v-if=\"step === 8\" class=\"recommendation-section\">\r\n        <h3>Would you recommend Frosty Crunch?</h3>\r\n        <div class=\"radio-buttons\">\r\n          <label for=\"recommend-yes\">Yes!</label>\r\n          <input type=\"radio\" id=\"recommend-yes\" name=\"recommend\" value=\"yes\" v-model=\"wouldRecommend\" required>\r\n          <label for=\"recommend-no\">No</label>\r\n          <input type=\"radio\" id=\"recommend-no\" name=\"recommend\" value=\"no\" v-model=\"wouldRecommend\" required>\r\n        </div>\r\n        <button type=\"submit\">Submit Rating</button>\r\n      </div>\r\n\r\n      <button v-if=\"step > 1\" @click=\"prevStep\">Previous</button>\r\n    </form>\r\n\r\n    <p v-if=\"submittedMessage\">Thank you for your feedback!</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      receiptNumber: \"\",\r\n      staffServed: \"\",\r\n      selectedBanana: \"\",\r\n      bananaFlavors: [\"Chocolate\", \"Strawberry\", \"Peanut Butter\", \"More...\"],\r\n      selectedIceCream: \"\",\r\n      iceCreamFlavors: [\"Vanilla\", \"Chocolate\", \"Coffee\", \"None\"],\r\n      customerServiceRating: 0,\r\n      foodQualityRating: 0,\r\n      ambienceRating: 0,\r\n      wouldRecommend: null,\r\n      submittedMessage: false,\r\n      step: 1,\r\n    };\r\n  },\r\n  methods: {\r\n    submitRating() {\r\n      // Gather all the rating data\r\n      const ratingData = {\r\n        receiptNumber: this.receiptNumber,\r\n        staffServed: this.staffServed,\r\n        orderedBanana: this.selectedBanana,\r\n        orderedIceCream: this.selectedIceCream,\r\n        customerServiceRating: this.customerServiceRating,\r\n        foodQualityRating: this.foodQualityRating,\r\n        ambienceRating: this.ambienceRating,\r\n        wouldRecommend: this.wouldRecommend,\r\n      };\r\n\r\n      // Send the rating data to your server for processing\r\n      // (Replace this with your actual submission logic)\r\n      fetch('/api/ratings', {\r\n        method: 'POST',\r\n        body: JSON.stringify(ratingData),\r\n        headers: { 'Content-Type': 'application/json' },\r\n      })\r\n        .then(response => {\r\n          if (response.ok) {\r\n            this.submittedMessage = true;\r\n            this.resetForm(); // Clear the form after successful submission\r\n          } else {\r\n            // Handle errors\r\n          }\r\n        })\r\n        .catch(error => {\r\n          // Handle network errors\r\n          console.log(error);\r\n        });\r\n    },\r\n    resetForm() {\r\n      // Reset all form fields to their initial values\r\n      this.receiptNumber = \"\";\r\n      this.staffServed = \"\";\r\n      this.selectedBanana = \"\";\r\n      this.selectedIceCream = \"\";\r\n      this.customerServiceRating = 0;\r\n      this.foodQualityRating = 0;\r\n      this.ambienceRating = 0;\r\n      this.wouldRecommend = null;\r\n      this.submittedMessage = false;\r\n      this.step = 1;\r\n    },\r\n    nextStep() {\r\n      this.step += 1;\r\n    },\r\n    prevStep() {\r\n      this.step -= 1;\r\n    },\r\n    selectOption(property, option) {\r\n      this[property] = option;\r\n      this.nextStep();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  /* Add your component styles here */\r\n  .rate-your-visit {\r\n    max-width: 600px;\r\n    margin: auto;\r\n    padding: 20px;\r\n    background-color: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  .input-group,\r\n  .order-section,\r\n  .rating-group,\r\n  .recommendation-section {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .options {\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n\r\n  .options div {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .stars {\r\n    display: flex;\r\n    gap: 5px;\r\n  }\r\n\r\n  .active {\r\n    background-color: #007bff;\r\n    color: #fff;\r\n  }\r\n\r\n  .radio-buttons {\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n\r\n  button {\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n\r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n</style>\r\n"],"mappings":"AA2GA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE;MACjBC,WAAW,EAAE,EAAE;MACfC,cAAc,EAAE,EAAE;MAClBC,aAAa,EAAE,CAAC,WAAW,EAAE,YAAY,EAAE,eAAe,EAAE,SAAS,CAAC;MACtEC,gBAAgB,EAAE,EAAE;MACpBC,eAAe,EAAE,CAAC,SAAS,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,CAAC;MAC3DC,qBAAqB,EAAE,CAAC;MACxBC,iBAAiB,EAAE,CAAC;MACpBC,cAAc,EAAE,CAAC;MACjBC,cAAc,EAAE,IAAI;MACpBC,gBAAgB,EAAE,KAAK;MACvBC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb;MACA,MAAMC,UAAS,GAAI;QACjBd,aAAa,EAAE,IAAI,CAACA,aAAa;QACjCC,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7Bc,aAAa,EAAE,IAAI,CAACb,cAAc;QAClCc,eAAe,EAAE,IAAI,CAACZ,gBAAgB;QACtCE,qBAAqB,EAAE,IAAI,CAACA,qBAAqB;QACjDC,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;QACzCC,cAAc,EAAE,IAAI,CAACA,cAAc;QACnCC,cAAc,EAAE,IAAI,CAACA;MACvB,CAAC;;MAED;MACA;MACAQ,KAAK,CAAC,cAAc,EAAE;QACpBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,UAAU,CAAC;QAChCQ,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAChD,CAAC,EACEC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACf,IAAI,CAACf,gBAAe,GAAI,IAAI;UAC5B,IAAI,CAACgB,SAAS,CAAC,CAAC,EAAE;QACpB,OAAO;UACL;QAAA;MAEJ,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACd;QACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IACDF,SAASA,CAAA,EAAG;MACV;MACA,IAAI,CAAC1B,aAAY,GAAI,EAAE;MACvB,IAAI,CAACC,WAAU,GAAI,EAAE;MACrB,IAAI,CAACC,cAAa,GAAI,EAAE;MACxB,IAAI,CAACE,gBAAe,GAAI,EAAE;MAC1B,IAAI,CAACE,qBAAoB,GAAI,CAAC;MAC9B,IAAI,CAACC,iBAAgB,GAAI,CAAC;MAC1B,IAAI,CAACC,cAAa,GAAI,CAAC;MACvB,IAAI,CAACC,cAAa,GAAI,IAAI;MAC1B,IAAI,CAACC,gBAAe,GAAI,KAAK;MAC7B,IAAI,CAACC,IAAG,GAAI,CAAC;IACf,CAAC;IACDoB,QAAQA,CAAA,EAAG;MACT,IAAI,CAACpB,IAAG,IAAK,CAAC;IAChB,CAAC;IACDqB,QAAQA,CAAA,EAAG;MACT,IAAI,CAACrB,IAAG,IAAK,CAAC;IAChB,CAAC;IACDsB,YAAYA,CAACC,QAAQ,EAAEC,MAAM,EAAE;MAC7B,IAAI,CAACD,QAAQ,IAAIC,MAAM;MACvB,IAAI,CAACJ,QAAQ,CAAC,CAAC;IACjB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}