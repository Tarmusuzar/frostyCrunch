{"ast":null,"code":"import { initializeApp, getApps } from 'firebase/compat/app';\nimport { getDatabase } from 'firebase/compat/database';\nexport default {\n  created() {\n    // Check if Firebase app is already initialized\n    if (!getApps().length) {\n      // If not initialized, initialize Firebase\n      const firebaseConfig = {\n        apiKey: \"YOUR_API_KEY\",\n        authDomain: \"YOUR_AUTH_DOMAIN\",\n        projectId: \"YOUR_PROJECT_ID\",\n        storageBucket: \"YOUR_STORAGE_BUCKET\",\n        messagingSenderId: \"YOUR_MESSAGING_SENDER_ID\",\n        appId: \"YOUR_APP_ID\"\n      };\n      initializeApp(firebaseConfig);\n    }\n\n    // Get Firebase database reference\n    const db = getDatabase();\n\n    // Your Firebase database reference\n    const frostyOrdersRef = db.ref('frostyOrders');\n\n    // Listen for child_added events in the frostyOrders node\n    frostyOrdersRef.on('child_added', childSnapshot => {\n      const newItem = childSnapshot.val();\n\n      // Do something with the newItem (e.g., update state or trigger a function)\n      console.log(newItem);\n    });\n  }\n};","map":{"version":3,"names":["initializeApp","getApps","getDatabase","created","length","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","frostyOrdersRef","ref","on","childSnapshot","newItem","val","console","log"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frostycrunch\\src\\components\\Admin\\AdminOrders\\NewOrders.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <div class=\"sub\">\r\n        <p>First</p>\r\n        <p>First</p>\r\n        <p>First</p>\r\n      </div>\r\n      <button>Completed</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { initializeApp, getApps } from 'firebase/compat/app';\r\n  import { getDatabase } from 'firebase/compat/database';\r\n  \r\n  export default {\r\n    created() {\r\n      // Check if Firebase app is already initialized\r\n      if (!getApps().length) {\r\n        // If not initialized, initialize Firebase\r\n        const firebaseConfig = {\r\n          apiKey: \"YOUR_API_KEY\",\r\n          authDomain: \"YOUR_AUTH_DOMAIN\",\r\n          projectId: \"YOUR_PROJECT_ID\",\r\n          storageBucket: \"YOUR_STORAGE_BUCKET\",\r\n          messagingSenderId: \"YOUR_MESSAGING_SENDER_ID\",\r\n          appId: \"YOUR_APP_ID\",\r\n        };\r\n        initializeApp(firebaseConfig);\r\n      }\r\n  \r\n      // Get Firebase database reference\r\n      const db = getDatabase();\r\n  \r\n      // Your Firebase database reference\r\n      const frostyOrdersRef = db.ref('frostyOrders');\r\n  \r\n      // Listen for child_added events in the frostyOrders node\r\n      frostyOrdersRef.on('child_added', (childSnapshot) => {\r\n        const newItem = childSnapshot.val();\r\n  \r\n        // Do something with the newItem (e.g., update state or trigger a function)\r\n        console.log(newItem);\r\n      });\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 90%;\r\n    margin: auto;\r\n    padding: 1rem;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  button:hover {\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button {\r\n    width: 7rem;\r\n    font-size: 1rem;\r\n    border: 1px solid white;\r\n    color: white;\r\n    border-radius: 7px;\r\n    background-color: green;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAYE,SAASA,aAAa,EAAEC,OAAM,QAAS,qBAAqB;AAC5D,SAASC,WAAU,QAAS,0BAA0B;AAEtD,eAAe;EACbC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACF,OAAO,CAAC,CAAC,CAACG,MAAM,EAAE;MACrB;MACA,MAAMC,cAAa,GAAI;QACrBC,MAAM,EAAE,cAAc;QACtBC,UAAU,EAAE,kBAAkB;QAC9BC,SAAS,EAAE,iBAAiB;QAC5BC,aAAa,EAAE,qBAAqB;QACpCC,iBAAiB,EAAE,0BAA0B;QAC7CC,KAAK,EAAE;MACT,CAAC;MACDX,aAAa,CAACK,cAAc,CAAC;IAC/B;;IAEA;IACA,MAAMO,EAAC,GAAIV,WAAW,CAAC,CAAC;;IAExB;IACA,MAAMW,eAAc,GAAID,EAAE,CAACE,GAAG,CAAC,cAAc,CAAC;;IAE9C;IACAD,eAAe,CAACE,EAAE,CAAC,aAAa,EAAGC,aAAa,IAAK;MACnD,MAAMC,OAAM,GAAID,aAAa,CAACE,GAAG,CAAC,CAAC;;MAEnC;MACAC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IACtB,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}