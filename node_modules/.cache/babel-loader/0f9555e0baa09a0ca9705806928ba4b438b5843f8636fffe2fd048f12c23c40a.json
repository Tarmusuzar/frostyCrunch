{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Restaurant Sales Dashboard\")], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"filters\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"dateFilter\"\n}, \"Select Date:\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"summary\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Sales Summary\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Sales by Staff:\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"charts\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"hourly-chart\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Hourly Performance\"), /*#__PURE__*/_createCommentVNode(\" Add your hourly performance chart here \")]), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"monthly-chart\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Monthly Performance\"), /*#__PURE__*/_createCommentVNode(\" Add your monthly performance chart here \")])], -1 /* HOISTED */);\nconst _hoisted_9 = {\n  class: \"additional-features\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Additional Features\", -1 /* HOISTED */);\nconst _hoisted_11 = {\n  key: 0\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Sales by Item:\", -1 /* HOISTED */);\nconst _hoisted_13 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"main\", null, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"dateFilter\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedDate = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.filterSales && $options.filterSales(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.selectedDate]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"p\", null, \"Total Sales: \" + _toDisplayString($options.formatCurrency($options.totalSales)), 1 /* TEXT */), _hoisted_7, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.salesByStaff, (sales, staff) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: staff\n    }, _toDisplayString(staff) + \": \" + _toDisplayString($options.formatCurrency(sales)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"p\", null, \"Top Selling Item: \" + _toDisplayString($options.topSellingItem), 1 /* TEXT */)]), _hoisted_8, _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"ol\", null, [_createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.toggleSalesByItem && $options.toggleSalesByItem(...args))\n  }, \"Toggle Sales by Item\"), $data.showSalesByItem ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.salesByItem, (sales, item) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item\n    }, _toDisplayString(item) + \": \" + _toDisplayString($options.formatCurrency(sales)), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"li\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.toggleDailyAverage && $options.toggleDailyAverage(...args))\n  }, \"Toggle Daily Average\"), $data.showDailyAverage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"p\", null, \"Daily Average Sales: \" + _toDisplayString($options.formatCurrency($options.dailyAverage)), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Add more features as needed \")])])])]);\n}","map":{"version":3,"names":["id","_createElementVNode","class","for","_createCommentVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","type","$data","selectedDate","$event","onChange","_cache","args","$options","filterSales","_hoisted_5","_hoisted_6","_toDisplayString","formatCurrency","totalSales","_hoisted_7","_Fragment","_renderList","salesByStaff","sales","staff","key","topSellingItem","_hoisted_8","_hoisted_9","_hoisted_10","onClick","toggleSalesByItem","showSalesByItem","_hoisted_11","_hoisted_12","salesByItem","item","toggleDailyAverage","showDailyAverage","_hoisted_13","dailyAverage"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frosty\\src\\components\\Admin\\AdminDashboard.vue"],"sourcesContent":["<template>\r\n    <div id=\"app\">\r\n      <header>\r\n        <h1>Restaurant Sales Dashboard</h1>\r\n      </header>\r\n      <main>\r\n        <div class=\"filters\">\r\n          <label for=\"dateFilter\">Select Date:</label>\r\n          <input type=\"date\" id=\"dateFilter\" v-model=\"selectedDate\" @change=\"filterSales\" />\r\n        </div>\r\n  \r\n        <div class=\"summary\">\r\n          <h2>Sales Summary</h2>\r\n          <p>Total Sales: {{ formatCurrency(totalSales) }}</p>\r\n          <p>Sales by Staff:</p>\r\n          <ul>\r\n            <li v-for=\"(sales, staff) in salesByStaff\" :key=\"staff\">\r\n              {{ staff }}: {{ formatCurrency(sales) }}\r\n            </li>\r\n          </ul>\r\n          <p>Top Selling Item: {{ topSellingItem }}</p>\r\n        </div>\r\n  \r\n        <div class=\"charts\">\r\n          <div class=\"hourly-chart\">\r\n            <h2>Hourly Performance</h2>\r\n            <!-- Add your hourly performance chart here -->\r\n          </div>\r\n  \r\n          <div class=\"monthly-chart\">\r\n            <h2>Monthly Performance</h2>\r\n            <!-- Add your monthly performance chart here -->\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"additional-features\">\r\n          <h2>Additional Features</h2>\r\n          <ol>\r\n            <li>\r\n              <button @click=\"toggleSalesByItem\">Toggle Sales by Item</button>\r\n              <div v-if=\"showSalesByItem\">\r\n                <p>Sales by Item:</p>\r\n                <ul>\r\n                  <li v-for=\"(sales, item) in salesByItem\" :key=\"item\">\r\n                    {{ item }}: {{ formatCurrency(sales) }}\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <button @click=\"toggleDailyAverage\">Toggle Daily Average</button>\r\n              <div v-if=\"showDailyAverage\">\r\n                <p>Daily Average Sales: {{ formatCurrency(dailyAverage) }}</p>\r\n              </div>\r\n            </li>\r\n            <!-- Add more features as needed -->\r\n          </ol>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        selectedDate: null,\r\n        salesData: [\r\n          // Your sales data here, e.g., { date: '2023-01-01', total: 500, staff: 'John', item: 'Burger' }\r\n        ],\r\n        showSalesByItem: false,\r\n        showDailyAverage: false,\r\n      };\r\n    },\r\n    computed: {\r\n      totalSales() {\r\n        return this.salesData\r\n          .filter((sale) => !this.selectedDate || sale.date === this.selectedDate)\r\n          .reduce((total, sale) => total + sale.total, 0);\r\n      },\r\n      salesByStaff() {\r\n        const salesByStaff = {};\r\n        this.salesData\r\n          .filter((sale) => !this.selectedDate || sale.date === this.selectedDate)\r\n          .forEach((sale) => {\r\n            if (!salesByStaff[sale.staff]) {\r\n              salesByStaff[sale.staff] = 0;\r\n            }\r\n            salesByStaff[sale.staff] += sale.total;\r\n          });\r\n        return salesByStaff;\r\n      },\r\n      topSellingItem() {\r\n        const items = {};\r\n        this.salesData\r\n          .filter((sale) => !this.selectedDate || sale.date === this.selectedDate)\r\n          .forEach((sale) => {\r\n            if (!items[sale.item]) {\r\n              items[sale.item] = 0;\r\n            }\r\n            items[sale.item] += sale.total;\r\n          });\r\n        const sortedItems = Object.keys(items).sort((a, b) => items[b] - items[a]);\r\n        return sortedItems[0] || 'N/A';\r\n      },\r\n      salesByItem() {\r\n        const salesByItem = {};\r\n        this.salesData\r\n          .filter((sale) => !this.selectedDate || sale.date === this.selectedDate)\r\n          .forEach((sale) => {\r\n            if (!salesByItem[sale.item]) {\r\n              salesByItem[sale.item] = 0;\r\n            }\r\n            salesByItem[sale.item] += sale.total;\r\n          });\r\n        return salesByItem;\r\n      },\r\n      dailyAverage() {\r\n        const filteredSales = this.salesData.filter((sale) => !this.selectedDate || sale.date === this.selectedDate);\r\n        const totalDays = [...new Set(filteredSales.map((sale) => sale.date))].length || 1;\r\n        const totalSales = filteredSales.reduce((total, sale) => total + sale.total, 0);\r\n        return totalSales / totalDays;\r\n      },\r\n    },\r\n    methods: {\r\n      filterSales() {\r\n        // Implement filtering logic based on selected date\r\n      },\r\n      formatCurrency(value) {\r\n        return `$${value.toFixed(2)}`;\r\n      },\r\n      toggleSalesByItem() {\r\n        this.showSalesByItem = !this.showSalesByItem;\r\n      },\r\n      toggleDailyAverage() {\r\n        this.showDailyAverage = !this.showDailyAverage;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  /* Add your styles here */\r\n  </style>\r\n<style>\r\n#app {\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\nheader {\r\n  background-color: #ffcc29; /* McDonald's Yellow */\r\n  color: #000; /* Black */\r\n  padding: 15px;\r\n  text-align: center;\r\n}\r\n\r\nmain {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.filters {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filters label {\r\n  margin-right: 10px;\r\n}\r\n\r\n.summary {\r\n  background-color: #f8f9fa; /* Light Gray */\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.summary h2 {\r\n  color: #dc3545; /* McDonald's Red */\r\n}\r\n\r\n.summary p {\r\n  margin: 10px 0;\r\n}\r\n\r\n.summary ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.summary li {\r\n  margin: 5px 0;\r\n}\r\n\r\n.charts {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.hourly-chart,\r\n.monthly-chart {\r\n  flex: 1;\r\n  background-color: #ffffff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.hourly-chart h2,\r\n.monthly-chart h2 {\r\n  color: #007bff; /* Bootstrap Blue */\r\n}\r\n\r\n.additional-features {\r\n  background-color: #ffffff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.additional-features h2 {\r\n  color: #28a745; /* Bootstrap Green */\r\n}\r\n\r\n.additional-features ol {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.additional-features li {\r\n  margin: 10px 0;\r\n}\r\n\r\n.additional-features button {\r\n  background-color: #dc3545; /* McDonald's Red */\r\n  color: #fff; /* White */\r\n  border: none;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\n.additional-features button:hover {\r\n  background-color: #c82333; /* Darker shade of red */\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}