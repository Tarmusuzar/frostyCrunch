{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ea5afd2c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Listen to Firebase Changes\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.items, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, _toDisplayString(item.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","items","item","key","id","name"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frostycrunch\\src\\components\\Admin\\AdminOrders\\NewOrders.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Listen to Firebase Changes</h1>\r\n      <ul>\r\n        <li v-for=\"item in items\" :key=\"item.id\">{{ item.name }}</li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted } from 'vue';\r\n  import { getDatabase, ref as databaseRef, onValue } from 'firebase/compat/database';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        items: [],\r\n      };\r\n    },\r\n    setup() {\r\n      const items = ref([]);\r\n  \r\n      // Firebase database reference\r\n      const db = getDatabase();\r\n      const frostyOrdersRef = databaseRef(db, 'frostyOrders');\r\n  \r\n      // Listen for value changes in the frostyOrders node\r\n      onValue(frostyOrdersRef, (snapshot) => {\r\n        const data = snapshot.val();\r\n        if (data) {\r\n          // Convert the data object to an array\r\n          const dataArray = Object.keys(data).map((key) => ({ id: key, ...data[key] }));\r\n          items.value = dataArray;\r\n        }\r\n      });\r\n  \r\n      return {\r\n        items,\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n    /* Your component styles */\r\n  </style>\r\n  "],"mappings":";;gEAEMA,mBAAA,CAAmC,YAA/B,4BAA0B;;uBADhCC,mBAAA,CAKM,cAJJC,UAAmC,EACnCF,mBAAA,CAEK,c,kBADHC,mBAAA,CAA6DE,SAAA,QAAAC,WAAA,CAA1CC,MAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfN,mBAAA,CAA6D;MAAlCO,GAAG,EAAED,IAAI,CAACE;wBAAOF,IAAI,CAACG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}