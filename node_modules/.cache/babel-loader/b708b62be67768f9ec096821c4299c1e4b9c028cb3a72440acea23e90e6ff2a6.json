{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      menu: [{\n        id: 1,\n        name: 'Classic Banana',\n        description: 'A classic frozen banana',\n        price: 3.99,\n        image: 'banana.jpg'\n      }, {\n        id: 2,\n        name: 'Chocolate Dipped Banana',\n        description: 'Banana dipped in rich chocolate',\n        price: 4.99,\n        image: 'chocolate_banana.jpg'\n      }],\n      cart: [],\n      isCartDialogOpen: false\n    };\n  },\n  computed: {\n    totalCartQuantity() {\n      return this.cart.reduce((total, item) => total + item.quantity, 0);\n    },\n    grandTotal() {\n      return this.cart.reduce((total, item) => total + item.price * item.quantity, 0);\n    }\n  },\n  methods: {\n    addToCart(item) {\n      const existingItem = this.cart.find(cartItem => cartItem.id === item.id);\n      if (existingItem) {\n        existingItem.quantity++;\n      } else {\n        this.cart.push({\n          ...item,\n          quantity: 1\n        });\n      }\n    },\n    openCartDialog() {\n      this.isCartDialogOpen = true;\n    },\n    increaseQuantity(cartItem) {\n      cartItem.quantity++;\n    },\n    checkout() {\n      // Implement your checkout logic here\n      alert('Checkout clicked!');\n    }\n  }\n};","map":{"version":3,"names":["data","menu","id","name","description","price","image","cart","isCartDialogOpen","computed","totalCartQuantity","reduce","total","item","quantity","grandTotal","methods","addToCart","existingItem","find","cartItem","push","openCartDialog","increaseQuantity","checkout","alert"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frosty\\src\\components\\MainMenu.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <h2>Menu</h2>\r\n    <div class=\"cart-icon\" @click=\"openCartDialog\">\r\n      <i class=\"fas fa-shopping-cart\"></i>\r\n      <span class=\"cart-counter\">{{ totalCartQuantity }}</span>\r\n    </div>\r\n    <ul class=\"menu-list\">\r\n      <li v-for=\"item in menu\" :key=\"item.id\">\r\n        <div class=\"menu-item\">\r\n          <img :src=\"'../assets/' + item.image\" alt=\"Banana\" />\r\n          <div class=\"item-details\">\r\n            <h3>{{ item.name }}</h3>\r\n            <p>{{ item.description }}</p>\r\n            <p class=\"price\">${{ item.price ? item.price.toFixed(2) : 'N/A' }}</p>\r\n            <button @click=\"addToCart(item)\">Add to Cart</button>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n\r\n    <dialog v-show=\"isCartDialogOpen\">\r\n      <h2>Shopping Cart</h2>\r\n      <ul class=\"cart-items\">\r\n        <li v-for=\"cartItem in cart\" :key=\"cartItem.id\">\r\n          <div class=\"cart-item\">\r\n            <div class=\"item-details\">\r\n              <h3>{{ cartItem.name }}</h3>\r\n              <p>Quantity: {{ cartItem.quantity }}</p>\r\n              <p>Price: ${{ cartItem.price.toFixed(2) }}</p>\r\n              <button @click=\"increaseQuantity(cartItem)\">Increase Quantity</button>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <p>Grand Total: ${{ grandTotal.toFixed(2) }}</p>\r\n      <button @click=\"checkout\">Checkout</button>\r\n    </dialog>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      menu: [\r\n        { id: 1, name: 'Classic Banana', description: 'A classic frozen banana', price: 3.99, image: 'banana.jpg' },\r\n        { id: 2, name: 'Chocolate Dipped Banana', description: 'Banana dipped in rich chocolate', price: 4.99, image: 'chocolate_banana.jpg' },\r\n      ],\r\n      cart: [],\r\n      isCartDialogOpen: false,\r\n    };\r\n  },\r\n  computed: {\r\n    totalCartQuantity() {\r\n      return this.cart.reduce((total, item) => total + item.quantity, 0);\r\n    },\r\n    grandTotal() {\r\n      return this.cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n    },\r\n  },\r\n  methods: {\r\n    addToCart(item) {\r\n      const existingItem = this.cart.find((cartItem) => cartItem.id === item.id);\r\n\r\n      if (existingItem) {\r\n        existingItem.quantity++;\r\n      } else {\r\n        this.cart.push({ ...item, quantity: 1 });\r\n      }\r\n    },\r\n    openCartDialog() {\r\n      this.isCartDialogOpen = true;\r\n    },\r\n    increaseQuantity(cartItem) {\r\n      cartItem.quantity++;\r\n    },\r\n    checkout() {\r\n      // Implement your checkout logic here\r\n      alert('Checkout clicked!');\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add your styles here */\r\n</style>\r\n"],"mappings":";AA0CA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CACJ;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,gBAAgB;QAAEC,WAAW,EAAE,yBAAyB;QAAEC,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAa,CAAC,EAC3G;QAAEJ,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,yBAAyB;QAAEC,WAAW,EAAE,iCAAiC;QAAEC,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAuB,CAAC,CACvI;MACDC,IAAI,EAAE,EAAE;MACRC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACH,IAAI,CAACI,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;IACpE,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACR,IAAI,CAACI,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACR,KAAI,GAAIQ,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;IACjF;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,SAASA,CAACJ,IAAI,EAAE;MACd,MAAMK,YAAW,GAAI,IAAI,CAACX,IAAI,CAACY,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAAClB,EAAC,KAAMW,IAAI,CAACX,EAAE,CAAC;MAE1E,IAAIgB,YAAY,EAAE;QAChBA,YAAY,CAACJ,QAAQ,EAAE;MACzB,OAAO;QACL,IAAI,CAACP,IAAI,CAACc,IAAI,CAAC;UAAE,GAAGR,IAAI;UAAEC,QAAQ,EAAE;QAAE,CAAC,CAAC;MAC1C;IACF,CAAC;IACDQ,cAAcA,CAAA,EAAG;MACf,IAAI,CAACd,gBAAe,GAAI,IAAI;IAC9B,CAAC;IACDe,gBAAgBA,CAACH,QAAQ,EAAE;MACzBA,QAAQ,CAACN,QAAQ,EAAE;IACrB,CAAC;IACDU,QAAQA,CAAA,EAAG;MACT;MACAC,KAAK,CAAC,mBAAmB,CAAC;IAC5B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}