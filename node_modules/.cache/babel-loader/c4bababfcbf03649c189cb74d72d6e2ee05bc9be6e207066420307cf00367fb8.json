{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"line-chart\"\n};\nconst _hoisted_2 = [\"width\", \"height\"];\nconst _hoisted_3 = [\"x\", \"y\"];\nconst _hoisted_4 = [\"y\"];\nconst _hoisted_5 = [\"x1\", \"y1\", \"x2\", \"y2\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(), _createElementBlock(\"svg\", {\n    width: $data.width,\n    height: $data.height\n  }, [_createCommentVNode(\" X-axis labels \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.days, (day, index) => {\n    return _openBlock(), _createElementBlock(\"text\", {\n      key: index,\n      x: index * ($data.width / ($data.days.length - 1)),\n      y: $data.height + 20,\n      \"text-anchor\": \"middle\"\n    }, _toDisplayString(day), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Y-axis labels \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.yLabels, (label, index) => {\n    return _openBlock(), _createElementBlock(\"text\", {\n      key: index,\n      x: \"-10\",\n      y: $data.height - index * ($data.height / ($data.yLabels.length - 1)),\n      \"text-anchor\": \"end\"\n    }, _toDisplayString(label), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" Example line chart data \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.chartData, (point, index) => {\n    return _openBlock(), _createElementBlock(\"line\", {\n      key: index,\n      x1: index * ($data.width / ($data.chartData.length - 1)),\n      y1: $data.height - point,\n      x2: index === $data.chartData.length - 1 ? $data.width : (index + 1) * ($data.width / ($data.chartData.length - 1)),\n      y2: $data.height - $data.chartData[index + 1],\n      style: {\n        \"stroke\": \"rgb(255,0,0)\",\n        \"stroke-width\": \"2\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_2))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","width","$data","height","_createCommentVNode","_Fragment","_renderList","days","day","index","key","x","length","y","_hoisted_3","yLabels","label","_hoisted_4","chartData","point","x1","y1","x2","y2","style"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frosty\\src\\components\\Admin\\AdminDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"line-chart\">\r\n    <svg :width=\"width\" :height=\"height\">\r\n      <!-- X-axis labels -->\r\n      <text v-for=\"(day, index) in days\" :key=\"index\"\r\n            :x=\"index * (width / (days.length - 1))\"\r\n            :y=\"height + 20\"\r\n            text-anchor=\"middle\">{{ day }}</text>\r\n\r\n      <!-- Y-axis labels -->\r\n      <text v-for=\"(label, index) in yLabels\" :key=\"index\"\r\n            x=\"-10\" :y=\"height - index * (height / (yLabels.length - 1))\"\r\n            text-anchor=\"end\">{{ label }}</text>\r\n\r\n      <!-- Example line chart data -->\r\n      <line v-for=\"(point, index) in chartData\" :key=\"index\"\r\n            :x1=\"index * (width / (chartData.length - 1))\"\r\n            :y1=\"height - point\"\r\n            :x2=\"index === chartData.length - 1 ? width : (index + 1) * (width / (chartData.length - 1))\"\r\n            :y2=\"height - chartData[index + 1]\"\r\n            style=\"stroke:rgb(255,0,0);stroke-width:2\" />\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      width: 400,\r\n      height: 200,\r\n      days: Array.from({ length: 30 }, (_, index) => index + 1), // Days of the month\r\n      yLabels: [0, 200, 400, 600], // Y-axis labels\r\n      chartData: this.generateRandomData(30, 50, 200), // 30 days, sales range between 50 and 200\r\n    };\r\n  },\r\n  methods: {\r\n    generateRandomData(count, min, max) {\r\n      return Array.from({ length: count }, () => Math.floor(Math.random() * (max - min + 1) + min));\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.line-chart {\r\n  width: 100%;\r\n  height: 240px; /* Adjust height as needed */\r\n  border: 1px solid #ddd;\r\n  margin-top: 20px;\r\n  overflow: hidden;\r\n}\r\n\r\ntext {\r\n  font-size: 10px;\r\n  fill: #555;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAY;;;;;;uBAAvBC,mBAAA,CAqBM,OArBNC,UAqBM,I,cApBJD,mBAAA,CAmBM;IAnBAE,KAAK,EAAEC,KAAA,CAAAD,KAAK;IAAGE,MAAM,EAAED,KAAA,CAAAC;MAC3BC,mBAAA,mBAAsB,G,kBACtBL,mBAAA,CAG2CM,SAAA,QAAAC,WAAA,CAHdJ,KAAA,CAAAK,IAAI,GAAnBC,GAAG,EAAEC,KAAK;yBAAxBV,mBAAA,CAG2C;MAHPW,GAAG,EAAED,KAAK;MACvCE,CAAC,EAAEF,KAAK,IAAIP,KAAA,CAAAD,KAAK,IAAIC,KAAA,CAAAK,IAAI,CAACK,MAAM;MAChCC,CAAC,EAAEX,KAAA,CAAAC,MAAM;MACV,aAAW,EAAC;wBAAYK,GAAG,wBAAAM,UAAA;kCAEjCV,mBAAA,mBAAsB,G,kBACtBL,mBAAA,CAE0CM,SAAA,QAAAC,WAAA,CAFXJ,KAAA,CAAAa,OAAO,GAAxBC,KAAK,EAAEP,KAAK;yBAA1BV,mBAAA,CAE0C;MAFDW,GAAG,EAAED,KAAK;MAC7CE,CAAC,EAAC,KAAK;MAAEE,CAAC,EAAEX,KAAA,CAAAC,MAAM,GAAGM,KAAK,IAAIP,KAAA,CAAAC,MAAM,IAAID,KAAA,CAAAa,OAAO,CAACH,MAAM;MACtD,aAAW,EAAC;wBAASI,KAAK,wBAAAC,UAAA;kCAEhCb,mBAAA,6BAAgC,G,kBAChCL,mBAAA,CAKmDM,SAAA,QAAAC,WAAA,CALpBJ,KAAA,CAAAgB,SAAS,GAA1BC,KAAK,EAAEV,KAAK;yBAA1BV,mBAAA,CAKmD;MALRW,GAAG,EAAED,KAAK;MAC9CW,EAAE,EAAEX,KAAK,IAAIP,KAAA,CAAAD,KAAK,IAAIC,KAAA,CAAAgB,SAAS,CAACN,MAAM;MACtCS,EAAE,EAAEnB,KAAA,CAAAC,MAAM,GAAGgB,KAAK;MAClBG,EAAE,EAAEb,KAAK,KAAKP,KAAA,CAAAgB,SAAS,CAACN,MAAM,OAAOV,KAAA,CAAAD,KAAK,IAAIQ,KAAK,SAASP,KAAA,CAAAD,KAAK,IAAIC,KAAA,CAAAgB,SAAS,CAACN,MAAM;MACrFW,EAAE,EAAErB,KAAA,CAAAC,MAAM,GAAGD,KAAA,CAAAgB,SAAS,CAACT,KAAK;MAC7Be,KAA0C,EAA1C;QAAA;QAAA;MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}