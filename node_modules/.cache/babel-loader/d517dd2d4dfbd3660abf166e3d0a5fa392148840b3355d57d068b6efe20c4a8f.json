{"ast":null,"code":"import { ref } from 'vue';\nimport { getDatabase, ref as databaseRef, onChildChanged } from 'firebase/compat/database';\nexport default {\n  setup() {\n    // Use a ref to store the last changed timestamp\n    const lastChangedTimestamp = ref(0);\n\n    // Firebase database reference\n    const db = getDatabase();\n    const frostyOrdersRef = databaseRef(db, 'frostyOrders');\n\n    // Listen for child_changed events in the frostyOrders node\n    onChildChanged(frostyOrdersRef, childSnapshot => {\n      // Get the timestamp of the change\n      const timestamp = childSnapshot.val()?.timestamp || 0;\n\n      // Check if the change is more recent than the last one\n      if (timestamp > lastChangedTimestamp.value) {\n        // Update the last changed timestamp\n        lastChangedTimestamp.value = timestamp;\n\n        // Display an alert\n        alert('Changes detected in frostyOrders!');\n      }\n    });\n    return {\n      lastChangedTimestamp\n    };\n  }\n};","map":{"version":3,"names":["ref","getDatabase","databaseRef","onChildChanged","setup","lastChangedTimestamp","db","frostyOrdersRef","childSnapshot","timestamp","val","value","alert"],"sources":["C:\\Users\\ADMIN\\OneDrive\\Desktop\\frostycrunch\\src\\components\\Admin\\AdminOrders\\NewOrders.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Listen to Firebase Changes</h1>\r\n    <!-- Your component content -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { getDatabase, ref as databaseRef, onChildChanged } from 'firebase/compat/database';\r\n\r\nexport default {\r\n  setup() {\r\n    // Use a ref to store the last changed timestamp\r\n    const lastChangedTimestamp = ref(0);\r\n\r\n    // Firebase database reference\r\n    const db = getDatabase();\r\n    const frostyOrdersRef = databaseRef(db, 'frostyOrders');\r\n\r\n    // Listen for child_changed events in the frostyOrders node\r\n    onChildChanged(frostyOrdersRef, (childSnapshot) => {\r\n      // Get the timestamp of the change\r\n      const timestamp = childSnapshot.val()?.timestamp || 0;\r\n\r\n      // Check if the change is more recent than the last one\r\n      if (timestamp > lastChangedTimestamp.value) {\r\n        // Update the last changed timestamp\r\n        lastChangedTimestamp.value = timestamp;\r\n\r\n        // Display an alert\r\n        alert('Changes detected in frostyOrders!');\r\n      }\r\n    });\r\n\r\n    return {\r\n      lastChangedTimestamp,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  /* Your component styles */\r\n</style>\r\n"],"mappings":"AAQA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,WAAW,EAAED,GAAE,IAAKE,WAAW,EAAEC,cAAa,QAAS,0BAA0B;AAE1F,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,oBAAmB,GAAIL,GAAG,CAAC,CAAC,CAAC;;IAEnC;IACA,MAAMM,EAAC,GAAIL,WAAW,CAAC,CAAC;IACxB,MAAMM,eAAc,GAAIL,WAAW,CAACI,EAAE,EAAE,cAAc,CAAC;;IAEvD;IACAH,cAAc,CAACI,eAAe,EAAGC,aAAa,IAAK;MACjD;MACA,MAAMC,SAAQ,GAAID,aAAa,CAACE,GAAG,CAAC,CAAC,EAAED,SAAQ,IAAK,CAAC;;MAErD;MACA,IAAIA,SAAQ,GAAIJ,oBAAoB,CAACM,KAAK,EAAE;QAC1C;QACAN,oBAAoB,CAACM,KAAI,GAAIF,SAAS;;QAEtC;QACAG,KAAK,CAAC,mCAAmC,CAAC;MAC5C;IACF,CAAC,CAAC;IAEF,OAAO;MACLP;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}